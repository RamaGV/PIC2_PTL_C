
PIC2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002ee  00800100  00001af8  00001b8c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001af8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000009d  008003ee  008003ee  00001e7a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001e7a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ed8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00001f18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002c50  00000000  00000000  00002070  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008f5  00000000  00000000  00004cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011a0  00000000  00000000  000055b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000398  00000000  00000000  00006758  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000090c  00000000  00000000  00006af0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010ef  00000000  00000000  000073fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  000084eb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
       4:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
       8:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
       c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      1c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      54:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      58:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      5c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      60:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      64:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      68:	05 06       	cpc	r0, r21
      6a:	f9 05       	cpc	r31, r9
      6c:	18 06       	cpc	r1, r24
      6e:	24 06       	cpc	r2, r20
      70:	9f 07       	cpc	r25, r31
      72:	09 07       	cpc	r16, r25
      74:	1b 07       	cpc	r17, r27
      76:	80 07       	cpc	r24, r16
      78:	84 08       	sbc	r8, r4

0000007a <__ctors_end>:
      7a:	11 24       	eor	r1, r1
      7c:	1f be       	out	0x3f, r1	; 63
      7e:	cf ef       	ldi	r28, 0xFF	; 255
      80:	d8 e0       	ldi	r29, 0x08	; 8
      82:	de bf       	out	0x3e, r29	; 62
      84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
      86:	13 e0       	ldi	r17, 0x03	; 3
      88:	a0 e0       	ldi	r26, 0x00	; 0
      8a:	b1 e0       	ldi	r27, 0x01	; 1
      8c:	e8 ef       	ldi	r30, 0xF8	; 248
      8e:	fa e1       	ldi	r31, 0x1A	; 26
      90:	02 c0       	rjmp	.+4      	; 0x96 <__do_copy_data+0x10>
      92:	05 90       	lpm	r0, Z+
      94:	0d 92       	st	X+, r0
      96:	ae 3e       	cpi	r26, 0xEE	; 238
      98:	b1 07       	cpc	r27, r17
      9a:	d9 f7       	brne	.-10     	; 0x92 <__do_copy_data+0xc>

0000009c <__do_clear_bss>:
      9c:	24 e0       	ldi	r18, 0x04	; 4
      9e:	ae ee       	ldi	r26, 0xEE	; 238
      a0:	b3 e0       	ldi	r27, 0x03	; 3
      a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
      a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
      a6:	ab 38       	cpi	r26, 0x8B	; 139
      a8:	b2 07       	cpc	r27, r18
      aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
      ac:	0e 94 ab 05 	call	0xb56	; 0xb56 <main>
      b0:	0c 94 7a 0d 	jmp	0x1af4	; 0x1af4 <_exit>

000000b4 <__bad_interrupt>:
      b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <LCD_enviar_nible>:
void LCD_modificar(){
	LCD_clear();
	LCD_goto(1,1); LCD_print("|                  |");
	LCD_goto(1,2); LCD_print("|    Modificar..   |");
	LCD_goto(1,3); LCD_print("|                  |");
	LCD_goto(1,4); LCD_print("|                  |");
      b8:	80 ff       	sbrs	r24, 0
      ba:	04 c0       	rjmp	.+8      	; 0xc4 <LCD_enviar_nible+0xc>
      bc:	9b b1       	in	r25, 0x0b	; 11
      be:	90 61       	ori	r25, 0x10	; 16
      c0:	9b b9       	out	0x0b, r25	; 11
      c2:	03 c0       	rjmp	.+6      	; 0xca <LCD_enviar_nible+0x12>
      c4:	9b b1       	in	r25, 0x0b	; 11
      c6:	9f 7e       	andi	r25, 0xEF	; 239
      c8:	9b b9       	out	0x0b, r25	; 11
      ca:	81 ff       	sbrs	r24, 1
      cc:	04 c0       	rjmp	.+8      	; 0xd6 <LCD_enviar_nible+0x1e>
      ce:	9b b1       	in	r25, 0x0b	; 11
      d0:	90 62       	ori	r25, 0x20	; 32
      d2:	9b b9       	out	0x0b, r25	; 11
      d4:	03 c0       	rjmp	.+6      	; 0xdc <LCD_enviar_nible+0x24>
      d6:	9b b1       	in	r25, 0x0b	; 11
      d8:	9f 7d       	andi	r25, 0xDF	; 223
      da:	9b b9       	out	0x0b, r25	; 11
      dc:	82 ff       	sbrs	r24, 2
      de:	04 c0       	rjmp	.+8      	; 0xe8 <LCD_enviar_nible+0x30>
      e0:	9b b1       	in	r25, 0x0b	; 11
      e2:	90 64       	ori	r25, 0x40	; 64
      e4:	9b b9       	out	0x0b, r25	; 11
      e6:	03 c0       	rjmp	.+6      	; 0xee <LCD_enviar_nible+0x36>
      e8:	9b b1       	in	r25, 0x0b	; 11
      ea:	9f 7b       	andi	r25, 0xBF	; 191
      ec:	9b b9       	out	0x0b, r25	; 11
      ee:	83 ff       	sbrs	r24, 3
      f0:	04 c0       	rjmp	.+8      	; 0xfa <LCD_enviar_nible+0x42>
      f2:	8b b1       	in	r24, 0x0b	; 11
      f4:	80 68       	ori	r24, 0x80	; 128
      f6:	8b b9       	out	0x0b, r24	; 11
      f8:	03 c0       	rjmp	.+6      	; 0x100 <LCD_enviar_nible+0x48>
      fa:	8b b1       	in	r24, 0x0b	; 11
      fc:	8f 77       	andi	r24, 0x7F	; 127
      fe:	8b b9       	out	0x0b, r24	; 11
     100:	8b b1       	in	r24, 0x0b	; 11
     102:	88 60       	ori	r24, 0x08	; 8
     104:	8b b9       	out	0x0b, r24	; 11
     106:	87 ec       	ldi	r24, 0xC7	; 199
     108:	90 e0       	ldi	r25, 0x00	; 0
     10a:	01 97       	sbiw	r24, 0x01	; 1
     10c:	f1 f7       	brne	.-4      	; 0x10a <LCD_enviar_nible+0x52>
     10e:	00 c0       	rjmp	.+0      	; 0x110 <LCD_enviar_nible+0x58>
     110:	00 00       	nop
     112:	8b b1       	in	r24, 0x0b	; 11
     114:	87 7f       	andi	r24, 0xF7	; 247
     116:	8b b9       	out	0x0b, r24	; 11
     118:	08 95       	ret

0000011a <LCD_cmd>:
     11a:	cf 93       	push	r28
     11c:	c8 2f       	mov	r28, r24
     11e:	8b b1       	in	r24, 0x0b	; 11
     120:	8b 7f       	andi	r24, 0xFB	; 251
     122:	8b b9       	out	0x0b, r24	; 11
     124:	00 00       	nop
     126:	8c 2f       	mov	r24, r28
     128:	82 95       	swap	r24
     12a:	8f 70       	andi	r24, 0x0F	; 15
     12c:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_enviar_nible>
     130:	8c 2f       	mov	r24, r28
     132:	8f 70       	andi	r24, 0x0F	; 15
     134:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_enviar_nible>
     138:	8f e9       	ldi	r24, 0x9F	; 159
     13a:	9f e0       	ldi	r25, 0x0F	; 15
     13c:	01 97       	sbiw	r24, 0x01	; 1
     13e:	f1 f7       	brne	.-4      	; 0x13c <LCD_cmd+0x22>
     140:	00 c0       	rjmp	.+0      	; 0x142 <LCD_cmd+0x28>
     142:	00 00       	nop
     144:	cf 91       	pop	r28
     146:	08 95       	ret

00000148 <LCD_instanciar>:
     148:	cf 93       	push	r28
     14a:	8a b1       	in	r24, 0x0a	; 10
     14c:	84 60       	ori	r24, 0x04	; 4
     14e:	8a b9       	out	0x0a, r24	; 10
     150:	8a b1       	in	r24, 0x0a	; 10
     152:	88 60       	ori	r24, 0x08	; 8
     154:	8a b9       	out	0x0a, r24	; 10
     156:	8b b1       	in	r24, 0x0b	; 11
     158:	87 7f       	andi	r24, 0xF7	; 247
     15a:	8b b9       	out	0x0b, r24	; 11
     15c:	8b b1       	in	r24, 0x0b	; 11
     15e:	8b 7f       	andi	r24, 0xFB	; 251
     160:	8b b9       	out	0x0b, r24	; 11
     162:	8a b1       	in	r24, 0x0a	; 10
     164:	80 61       	ori	r24, 0x10	; 16
     166:	8a b9       	out	0x0a, r24	; 10
     168:	8a b1       	in	r24, 0x0a	; 10
     16a:	80 62       	ori	r24, 0x20	; 32
     16c:	8a b9       	out	0x0a, r24	; 10
     16e:	8a b1       	in	r24, 0x0a	; 10
     170:	80 64       	ori	r24, 0x40	; 64
     172:	8a b9       	out	0x0a, r24	; 10
     174:	8a b1       	in	r24, 0x0a	; 10
     176:	80 68       	ori	r24, 0x80	; 128
     178:	8a b9       	out	0x0a, r24	; 10
     17a:	2f ef       	ldi	r18, 0xFF	; 255
     17c:	89 ef       	ldi	r24, 0xF9	; 249
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	21 50       	subi	r18, 0x01	; 1
     182:	80 40       	sbci	r24, 0x00	; 0
     184:	90 40       	sbci	r25, 0x00	; 0
     186:	e1 f7       	brne	.-8      	; 0x180 <LCD_instanciar+0x38>
     188:	00 c0       	rjmp	.+0      	; 0x18a <LCD_instanciar+0x42>
     18a:	00 00       	nop
     18c:	c0 e0       	ldi	r28, 0x00	; 0
     18e:	0a c0       	rjmp	.+20     	; 0x1a4 <LCD_instanciar+0x5c>
     190:	83 e0       	ldi	r24, 0x03	; 3
     192:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_enviar_nible>
     196:	8f e1       	ldi	r24, 0x1F	; 31
     198:	9e e4       	ldi	r25, 0x4E	; 78
     19a:	01 97       	sbiw	r24, 0x01	; 1
     19c:	f1 f7       	brne	.-4      	; 0x19a <LCD_instanciar+0x52>
     19e:	00 c0       	rjmp	.+0      	; 0x1a0 <LCD_instanciar+0x58>
     1a0:	00 00       	nop
     1a2:	cf 5f       	subi	r28, 0xFF	; 255
     1a4:	c3 30       	cpi	r28, 0x03	; 3
     1a6:	a0 f3       	brcs	.-24     	; 0x190 <LCD_instanciar+0x48>
     1a8:	83 e3       	ldi	r24, 0x33	; 51
     1aa:	0e 94 8d 00 	call	0x11a	; 0x11a <LCD_cmd>
     1ae:	82 e3       	ldi	r24, 0x32	; 50
     1b0:	0e 94 8d 00 	call	0x11a	; 0x11a <LCD_cmd>
     1b4:	88 e2       	ldi	r24, 0x28	; 40
     1b6:	0e 94 8d 00 	call	0x11a	; 0x11a <LCD_cmd>
     1ba:	8c e0       	ldi	r24, 0x0C	; 12
     1bc:	0e 94 8d 00 	call	0x11a	; 0x11a <LCD_cmd>
     1c0:	86 e0       	ldi	r24, 0x06	; 6
     1c2:	0e 94 8d 00 	call	0x11a	; 0x11a <LCD_cmd>
     1c6:	81 e0       	ldi	r24, 0x01	; 1
     1c8:	0e 94 8d 00 	call	0x11a	; 0x11a <LCD_cmd>
     1cc:	8f ed       	ldi	r24, 0xDF	; 223
     1ce:	9e e2       	ldi	r25, 0x2E	; 46
     1d0:	01 97       	sbiw	r24, 0x01	; 1
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <LCD_instanciar+0x88>
     1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <LCD_instanciar+0x8e>
     1d6:	00 00       	nop
     1d8:	cf 91       	pop	r28
     1da:	08 95       	ret

000001dc <LCD_dato>:
     1dc:	cf 93       	push	r28
     1de:	c8 2f       	mov	r28, r24
     1e0:	8b b1       	in	r24, 0x0b	; 11
     1e2:	84 60       	ori	r24, 0x04	; 4
     1e4:	8b b9       	out	0x0b, r24	; 11
     1e6:	00 00       	nop
     1e8:	8c 2f       	mov	r24, r28
     1ea:	82 95       	swap	r24
     1ec:	8f 70       	andi	r24, 0x0F	; 15
     1ee:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_enviar_nible>
     1f2:	8c 2f       	mov	r24, r28
     1f4:	8f 70       	andi	r24, 0x0F	; 15
     1f6:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_enviar_nible>
     1fa:	8f e9       	ldi	r24, 0x9F	; 159
     1fc:	9f e0       	ldi	r25, 0x0F	; 15
     1fe:	01 97       	sbiw	r24, 0x01	; 1
     200:	f1 f7       	brne	.-4      	; 0x1fe <LCD_dato+0x22>
     202:	00 c0       	rjmp	.+0      	; 0x204 <LCD_dato+0x28>
     204:	00 00       	nop
     206:	cf 91       	pop	r28
     208:	08 95       	ret

0000020a <LCD_print>:
     20a:	cf 93       	push	r28
     20c:	df 93       	push	r29
     20e:	ec 01       	movw	r28, r24
     210:	03 c0       	rjmp	.+6      	; 0x218 <LCD_print+0xe>
     212:	0e 94 ee 00 	call	0x1dc	; 0x1dc <LCD_dato>
     216:	21 96       	adiw	r28, 0x01	; 1
     218:	88 81       	ld	r24, Y
     21a:	81 11       	cpse	r24, r1
     21c:	fa cf       	rjmp	.-12     	; 0x212 <LCD_print+0x8>
     21e:	df 91       	pop	r29
     220:	cf 91       	pop	r28
     222:	08 95       	ret

00000224 <LCD_num>:
     224:	0f 93       	push	r16
     226:	1f 93       	push	r17
     228:	cf 93       	push	r28
     22a:	df 93       	push	r29
     22c:	cd b7       	in	r28, 0x3d	; 61
     22e:	de b7       	in	r29, 0x3e	; 62
     230:	2a 97       	sbiw	r28, 0x0a	; 10
     232:	0f b6       	in	r0, 0x3f	; 63
     234:	f8 94       	cli
     236:	de bf       	out	0x3e, r29	; 62
     238:	0f be       	out	0x3f, r0	; 63
     23a:	cd bf       	out	0x3d, r28	; 61
     23c:	9f 93       	push	r25
     23e:	8f 93       	push	r24
     240:	8e e2       	ldi	r24, 0x2E	; 46
     242:	91 e0       	ldi	r25, 0x01	; 1
     244:	9f 93       	push	r25
     246:	8f 93       	push	r24
     248:	8e 01       	movw	r16, r28
     24a:	0f 5f       	subi	r16, 0xFF	; 255
     24c:	1f 4f       	sbci	r17, 0xFF	; 255
     24e:	1f 93       	push	r17
     250:	0f 93       	push	r16
     252:	0e 94 41 0a 	call	0x1482	; 0x1482 <sprintf>
     256:	c8 01       	movw	r24, r16
     258:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     25c:	0f 90       	pop	r0
     25e:	0f 90       	pop	r0
     260:	0f 90       	pop	r0
     262:	0f 90       	pop	r0
     264:	0f 90       	pop	r0
     266:	0f 90       	pop	r0
     268:	2a 96       	adiw	r28, 0x0a	; 10
     26a:	0f b6       	in	r0, 0x3f	; 63
     26c:	f8 94       	cli
     26e:	de bf       	out	0x3e, r29	; 62
     270:	0f be       	out	0x3f, r0	; 63
     272:	cd bf       	out	0x3d, r28	; 61
     274:	df 91       	pop	r29
     276:	cf 91       	pop	r28
     278:	1f 91       	pop	r17
     27a:	0f 91       	pop	r16
     27c:	08 95       	ret

0000027e <LCD_goto>:
     27e:	62 30       	cpi	r22, 0x02	; 2
     280:	59 f0       	breq	.+22     	; 0x298 <LCD_goto+0x1a>
     282:	18 f4       	brcc	.+6      	; 0x28a <LCD_goto+0xc>
     284:	61 30       	cpi	r22, 0x01	; 1
     286:	31 f0       	breq	.+12     	; 0x294 <LCD_goto+0x16>
     288:	0d c0       	rjmp	.+26     	; 0x2a4 <LCD_goto+0x26>
     28a:	63 30       	cpi	r22, 0x03	; 3
     28c:	39 f0       	breq	.+14     	; 0x29c <LCD_goto+0x1e>
     28e:	64 30       	cpi	r22, 0x04	; 4
     290:	39 f0       	breq	.+14     	; 0x2a0 <LCD_goto+0x22>
     292:	08 c0       	rjmp	.+16     	; 0x2a4 <LCD_goto+0x26>
     294:	81 50       	subi	r24, 0x01	; 1
     296:	07 c0       	rjmp	.+14     	; 0x2a6 <LCD_goto+0x28>
     298:	81 5c       	subi	r24, 0xC1	; 193
     29a:	05 c0       	rjmp	.+10     	; 0x2a6 <LCD_goto+0x28>
     29c:	8d 5e       	subi	r24, 0xED	; 237
     29e:	03 c0       	rjmp	.+6      	; 0x2a6 <LCD_goto+0x28>
     2a0:	8d 5a       	subi	r24, 0xAD	; 173
     2a2:	01 c0       	rjmp	.+2      	; 0x2a6 <LCD_goto+0x28>
     2a4:	81 50       	subi	r24, 0x01	; 1
     2a6:	80 68       	ori	r24, 0x80	; 128
     2a8:	0e 94 8d 00 	call	0x11a	; 0x11a <LCD_cmd>
     2ac:	08 95       	ret

000002ae <LCD_clear>:
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	0e 94 8d 00 	call	0x11a	; 0x11a <LCD_cmd>
     2b4:	8f e3       	ldi	r24, 0x3F	; 63
     2b6:	9f e1       	ldi	r25, 0x1F	; 31
     2b8:	01 97       	sbiw	r24, 0x01	; 1
     2ba:	f1 f7       	brne	.-4      	; 0x2b8 <LCD_clear+0xa>
     2bc:	00 c0       	rjmp	.+0      	; 0x2be <LCD_clear+0x10>
     2be:	00 00       	nop
     2c0:	08 95       	ret

000002c2 <LCD_agregar>:
     2c2:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     2c6:	61 e0       	ldi	r22, 0x01	; 1
     2c8:	81 e0       	ldi	r24, 0x01	; 1
     2ca:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     2ce:	81 e3       	ldi	r24, 0x31	; 49
     2d0:	91 e0       	ldi	r25, 0x01	; 1
     2d2:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     2d6:	62 e0       	ldi	r22, 0x02	; 2
     2d8:	81 e0       	ldi	r24, 0x01	; 1
     2da:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     2de:	86 e4       	ldi	r24, 0x46	; 70
     2e0:	91 e0       	ldi	r25, 0x01	; 1
     2e2:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     2e6:	63 e0       	ldi	r22, 0x03	; 3
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     2ee:	8b e5       	ldi	r24, 0x5B	; 91
     2f0:	91 e0       	ldi	r25, 0x01	; 1
     2f2:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     2f6:	64 e0       	ldi	r22, 0x04	; 4
     2f8:	81 e0       	ldi	r24, 0x01	; 1
     2fa:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     2fe:	86 e4       	ldi	r24, 0x46	; 70
     300:	91 e0       	ldi	r25, 0x01	; 1
     302:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     306:	08 95       	ret

00000308 <LCD_bth>:
     308:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     30c:	61 e0       	ldi	r22, 0x01	; 1
     30e:	81 e0       	ldi	r24, 0x01	; 1
     310:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     314:	81 e3       	ldi	r24, 0x31	; 49
     316:	91 e0       	ldi	r25, 0x01	; 1
     318:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     31c:	62 e0       	ldi	r22, 0x02	; 2
     31e:	81 e0       	ldi	r24, 0x01	; 1
     320:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     324:	86 e4       	ldi	r24, 0x46	; 70
     326:	91 e0       	ldi	r25, 0x01	; 1
     328:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     32c:	63 e0       	ldi	r22, 0x03	; 3
     32e:	81 e0       	ldi	r24, 0x01	; 1
     330:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     334:	80 e7       	ldi	r24, 0x70	; 112
     336:	91 e0       	ldi	r25, 0x01	; 1
     338:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     33c:	64 e0       	ldi	r22, 0x04	; 4
     33e:	81 e0       	ldi	r24, 0x01	; 1
     340:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     344:	86 e4       	ldi	r24, 0x46	; 70
     346:	91 e0       	ldi	r25, 0x01	; 1
     348:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     34c:	08 95       	ret

0000034e <LCD_quitar>:
     34e:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     352:	61 e0       	ldi	r22, 0x01	; 1
     354:	81 e0       	ldi	r24, 0x01	; 1
     356:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     35a:	81 e3       	ldi	r24, 0x31	; 49
     35c:	91 e0       	ldi	r25, 0x01	; 1
     35e:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     362:	62 e0       	ldi	r22, 0x02	; 2
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     36a:	86 e4       	ldi	r24, 0x46	; 70
     36c:	91 e0       	ldi	r25, 0x01	; 1
     36e:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     372:	63 e0       	ldi	r22, 0x03	; 3
     374:	81 e0       	ldi	r24, 0x01	; 1
     376:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     37a:	85 e8       	ldi	r24, 0x85	; 133
     37c:	91 e0       	ldi	r25, 0x01	; 1
     37e:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     382:	64 e0       	ldi	r22, 0x04	; 4
     384:	81 e0       	ldi	r24, 0x01	; 1
     386:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     38a:	86 e4       	ldi	r24, 0x46	; 70
     38c:	91 e0       	ldi	r25, 0x01	; 1
     38e:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     392:	08 95       	ret

00000394 <LCD_bth_interno>:
     394:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     398:	61 e0       	ldi	r22, 0x01	; 1
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     3a0:	8a e9       	ldi	r24, 0x9A	; 154
     3a2:	91 e0       	ldi	r25, 0x01	; 1
     3a4:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     3a8:	62 e0       	ldi	r22, 0x02	; 2
     3aa:	81 e0       	ldi	r24, 0x01	; 1
     3ac:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     3b0:	8f ea       	ldi	r24, 0xAF	; 175
     3b2:	91 e0       	ldi	r25, 0x01	; 1
     3b4:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     3b8:	63 e0       	ldi	r22, 0x03	; 3
     3ba:	81 e0       	ldi	r24, 0x01	; 1
     3bc:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     3c0:	84 ec       	ldi	r24, 0xC4	; 196
     3c2:	91 e0       	ldi	r25, 0x01	; 1
     3c4:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     3c8:	64 e0       	ldi	r22, 0x04	; 4
     3ca:	81 e0       	ldi	r24, 0x01	; 1
     3cc:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     3d0:	89 ed       	ldi	r24, 0xD9	; 217
     3d2:	91 e0       	ldi	r25, 0x01	; 1
     3d4:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     3d8:	08 95       	ret

000003da <LCD_bth_vincular>:
     3da:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     3de:	61 e0       	ldi	r22, 0x01	; 1
     3e0:	81 e0       	ldi	r24, 0x01	; 1
     3e2:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     3e6:	8e ee       	ldi	r24, 0xEE	; 238
     3e8:	91 e0       	ldi	r25, 0x01	; 1
     3ea:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     3ee:	62 e0       	ldi	r22, 0x02	; 2
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     3f6:	83 e0       	ldi	r24, 0x03	; 3
     3f8:	92 e0       	ldi	r25, 0x02	; 2
     3fa:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     3fe:	63 e0       	ldi	r22, 0x03	; 3
     400:	81 e0       	ldi	r24, 0x01	; 1
     402:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     406:	88 e1       	ldi	r24, 0x18	; 24
     408:	92 e0       	ldi	r25, 0x02	; 2
     40a:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     40e:	64 e0       	ldi	r22, 0x04	; 4
     410:	81 e0       	ldi	r24, 0x01	; 1
     412:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     416:	8d e2       	ldi	r24, 0x2D	; 45
     418:	92 e0       	ldi	r25, 0x02	; 2
     41a:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     41e:	08 95       	ret

00000420 <LCD_bth_modificar>:
     420:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     424:	61 e0       	ldi	r22, 0x01	; 1
     426:	81 e0       	ldi	r24, 0x01	; 1
     428:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     42c:	82 e4       	ldi	r24, 0x42	; 66
     42e:	92 e0       	ldi	r25, 0x02	; 2
     430:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     434:	62 e0       	ldi	r22, 0x02	; 2
     436:	81 e0       	ldi	r24, 0x01	; 1
     438:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     43c:	83 e0       	ldi	r24, 0x03	; 3
     43e:	92 e0       	ldi	r25, 0x02	; 2
     440:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     444:	63 e0       	ldi	r22, 0x03	; 3
     446:	81 e0       	ldi	r24, 0x01	; 1
     448:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     44c:	88 e1       	ldi	r24, 0x18	; 24
     44e:	92 e0       	ldi	r25, 0x02	; 2
     450:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     454:	64 e0       	ldi	r22, 0x04	; 4
     456:	81 e0       	ldi	r24, 0x01	; 1
     458:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     45c:	8d e2       	ldi	r24, 0x2D	; 45
     45e:	92 e0       	ldi	r25, 0x02	; 2
     460:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     464:	08 95       	ret

00000466 <LCD_espera>:
     466:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     46a:	61 e0       	ldi	r22, 0x01	; 1
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     472:	87 e5       	ldi	r24, 0x57	; 87
     474:	92 e0       	ldi	r25, 0x02	; 2
     476:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     47a:	62 e0       	ldi	r22, 0x02	; 2
     47c:	81 e0       	ldi	r24, 0x01	; 1
     47e:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     482:	8c e6       	ldi	r24, 0x6C	; 108
     484:	92 e0       	ldi	r25, 0x02	; 2
     486:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     48a:	63 e0       	ldi	r22, 0x03	; 3
     48c:	81 e0       	ldi	r24, 0x01	; 1
     48e:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     492:	81 e8       	ldi	r24, 0x81	; 129
     494:	92 e0       	ldi	r25, 0x02	; 2
     496:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     49a:	64 e0       	ldi	r22, 0x04	; 4
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     4a2:	87 e5       	ldi	r24, 0x57	; 87
     4a4:	92 e0       	ldi	r25, 0x02	; 2
     4a6:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     4aa:	08 95       	ret

000004ac <LCD_envio_ok>:
     4ac:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     4b0:	61 e0       	ldi	r22, 0x01	; 1
     4b2:	81 e0       	ldi	r24, 0x01	; 1
     4b4:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     4b8:	87 e5       	ldi	r24, 0x57	; 87
     4ba:	92 e0       	ldi	r25, 0x02	; 2
     4bc:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     4c0:	62 e0       	ldi	r22, 0x02	; 2
     4c2:	81 e0       	ldi	r24, 0x01	; 1
     4c4:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     4c8:	86 e9       	ldi	r24, 0x96	; 150
     4ca:	92 e0       	ldi	r25, 0x02	; 2
     4cc:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     4d0:	63 e0       	ldi	r22, 0x03	; 3
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     4d8:	8b ea       	ldi	r24, 0xAB	; 171
     4da:	92 e0       	ldi	r25, 0x02	; 2
     4dc:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     4e0:	64 e0       	ldi	r22, 0x04	; 4
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     4e8:	87 e5       	ldi	r24, 0x57	; 87
     4ea:	92 e0       	ldi	r25, 0x02	; 2
     4ec:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     4f0:	08 95       	ret

000004f2 <PAD_init>:
     4f2:	84 b1       	in	r24, 0x04	; 4
     4f4:	81 60       	ori	r24, 0x01	; 1
     4f6:	84 b9       	out	0x04, r24	; 4
     4f8:	84 b1       	in	r24, 0x04	; 4
     4fa:	82 60       	ori	r24, 0x02	; 2
     4fc:	84 b9       	out	0x04, r24	; 4
     4fe:	84 b1       	in	r24, 0x04	; 4
     500:	84 60       	ori	r24, 0x04	; 4
     502:	84 b9       	out	0x04, r24	; 4
     504:	84 b1       	in	r24, 0x04	; 4
     506:	88 60       	ori	r24, 0x08	; 8
     508:	84 b9       	out	0x04, r24	; 4
     50a:	87 b1       	in	r24, 0x07	; 7
     50c:	8e 7f       	andi	r24, 0xFE	; 254
     50e:	87 b9       	out	0x07, r24	; 7
     510:	87 b1       	in	r24, 0x07	; 7
     512:	8d 7f       	andi	r24, 0xFD	; 253
     514:	87 b9       	out	0x07, r24	; 7
     516:	87 b1       	in	r24, 0x07	; 7
     518:	8b 7f       	andi	r24, 0xFB	; 251
     51a:	87 b9       	out	0x07, r24	; 7
     51c:	87 b1       	in	r24, 0x07	; 7
     51e:	87 7f       	andi	r24, 0xF7	; 247
     520:	87 b9       	out	0x07, r24	; 7
     522:	88 b1       	in	r24, 0x08	; 8
     524:	81 60       	ori	r24, 0x01	; 1
     526:	88 b9       	out	0x08, r24	; 8
     528:	88 b1       	in	r24, 0x08	; 8
     52a:	82 60       	ori	r24, 0x02	; 2
     52c:	88 b9       	out	0x08, r24	; 8
     52e:	88 b1       	in	r24, 0x08	; 8
     530:	84 60       	ori	r24, 0x04	; 4
     532:	88 b9       	out	0x08, r24	; 8
     534:	88 b1       	in	r24, 0x08	; 8
     536:	88 60       	ori	r24, 0x08	; 8
     538:	88 b9       	out	0x08, r24	; 8
     53a:	08 95       	ret

0000053c <COLUMNA_barido>:
     53c:	30 99       	sbic	0x06, 0	; 6
     53e:	09 c0       	rjmp	.+18     	; 0x552 <COLUMNA_barido+0x16>
     540:	30 9b       	sbis	0x06, 0	; 6
     542:	fe cf       	rjmp	.-4      	; 0x540 <COLUMNA_barido+0x4>
     544:	31 9b       	sbis	0x06, 1	; 6
     546:	fc cf       	rjmp	.-8      	; 0x540 <COLUMNA_barido+0x4>
     548:	32 9b       	sbis	0x06, 2	; 6
     54a:	fa cf       	rjmp	.-12     	; 0x540 <COLUMNA_barido+0x4>
     54c:	33 9b       	sbis	0x06, 3	; 6
     54e:	f8 cf       	rjmp	.-16     	; 0x540 <COLUMNA_barido+0x4>
     550:	31 c0       	rjmp	.+98     	; 0x5b4 <COLUMNA_barido+0x78>
     552:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <key>
     556:	8f 5f       	subi	r24, 0xFF	; 255
     558:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <key>
     55c:	31 99       	sbic	0x06, 1	; 6
     55e:	09 c0       	rjmp	.+18     	; 0x572 <COLUMNA_barido+0x36>
     560:	30 9b       	sbis	0x06, 0	; 6
     562:	fe cf       	rjmp	.-4      	; 0x560 <COLUMNA_barido+0x24>
     564:	31 9b       	sbis	0x06, 1	; 6
     566:	fc cf       	rjmp	.-8      	; 0x560 <COLUMNA_barido+0x24>
     568:	32 9b       	sbis	0x06, 2	; 6
     56a:	fa cf       	rjmp	.-12     	; 0x560 <COLUMNA_barido+0x24>
     56c:	33 9b       	sbis	0x06, 3	; 6
     56e:	f8 cf       	rjmp	.-16     	; 0x560 <COLUMNA_barido+0x24>
     570:	23 c0       	rjmp	.+70     	; 0x5b8 <COLUMNA_barido+0x7c>
     572:	8f 5f       	subi	r24, 0xFF	; 255
     574:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <key>
     578:	32 99       	sbic	0x06, 2	; 6
     57a:	09 c0       	rjmp	.+18     	; 0x58e <COLUMNA_barido+0x52>
     57c:	30 9b       	sbis	0x06, 0	; 6
     57e:	fe cf       	rjmp	.-4      	; 0x57c <COLUMNA_barido+0x40>
     580:	31 9b       	sbis	0x06, 1	; 6
     582:	fc cf       	rjmp	.-8      	; 0x57c <COLUMNA_barido+0x40>
     584:	32 9b       	sbis	0x06, 2	; 6
     586:	fa cf       	rjmp	.-12     	; 0x57c <COLUMNA_barido+0x40>
     588:	33 9b       	sbis	0x06, 3	; 6
     58a:	f8 cf       	rjmp	.-16     	; 0x57c <COLUMNA_barido+0x40>
     58c:	17 c0       	rjmp	.+46     	; 0x5bc <COLUMNA_barido+0x80>
     58e:	8f 5f       	subi	r24, 0xFF	; 255
     590:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <key>
     594:	33 99       	sbic	0x06, 3	; 6
     596:	09 c0       	rjmp	.+18     	; 0x5aa <COLUMNA_barido+0x6e>
     598:	30 9b       	sbis	0x06, 0	; 6
     59a:	fe cf       	rjmp	.-4      	; 0x598 <COLUMNA_barido+0x5c>
     59c:	31 9b       	sbis	0x06, 1	; 6
     59e:	fc cf       	rjmp	.-8      	; 0x598 <COLUMNA_barido+0x5c>
     5a0:	32 9b       	sbis	0x06, 2	; 6
     5a2:	fa cf       	rjmp	.-12     	; 0x598 <COLUMNA_barido+0x5c>
     5a4:	33 9b       	sbis	0x06, 3	; 6
     5a6:	f8 cf       	rjmp	.-16     	; 0x598 <COLUMNA_barido+0x5c>
     5a8:	0b c0       	rjmp	.+22     	; 0x5c0 <COLUMNA_barido+0x84>
     5aa:	8f 5f       	subi	r24, 0xFF	; 255
     5ac:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <key>
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	08 95       	ret
     5b4:	81 e0       	ldi	r24, 0x01	; 1
     5b6:	08 95       	ret
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	08 95       	ret
     5bc:	81 e0       	ldi	r24, 0x01	; 1
     5be:	08 95       	ret
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	08 95       	ret

000005c4 <FILA_init>:
     5c4:	95 b1       	in	r25, 0x05	; 5
     5c6:	91 60       	ori	r25, 0x01	; 1
     5c8:	95 b9       	out	0x05, r25	; 5
     5ca:	95 b1       	in	r25, 0x05	; 5
     5cc:	92 60       	ori	r25, 0x02	; 2
     5ce:	95 b9       	out	0x05, r25	; 5
     5d0:	95 b1       	in	r25, 0x05	; 5
     5d2:	94 60       	ori	r25, 0x04	; 4
     5d4:	95 b9       	out	0x05, r25	; 5
     5d6:	95 b1       	in	r25, 0x05	; 5
     5d8:	98 60       	ori	r25, 0x08	; 8
     5da:	95 b9       	out	0x05, r25	; 5
     5dc:	82 30       	cpi	r24, 0x02	; 2
     5de:	69 f0       	breq	.+26     	; 0x5fa <FILA_init+0x36>
     5e0:	18 f4       	brcc	.+6      	; 0x5e8 <FILA_init+0x24>
     5e2:	81 30       	cpi	r24, 0x01	; 1
     5e4:	31 f0       	breq	.+12     	; 0x5f2 <FILA_init+0x2e>
     5e6:	08 95       	ret
     5e8:	83 30       	cpi	r24, 0x03	; 3
     5ea:	59 f0       	breq	.+22     	; 0x602 <FILA_init+0x3e>
     5ec:	84 30       	cpi	r24, 0x04	; 4
     5ee:	69 f0       	breq	.+26     	; 0x60a <FILA_init+0x46>
     5f0:	08 95       	ret
     5f2:	85 b1       	in	r24, 0x05	; 5
     5f4:	8e 7f       	andi	r24, 0xFE	; 254
     5f6:	85 b9       	out	0x05, r24	; 5
     5f8:	08 95       	ret
     5fa:	85 b1       	in	r24, 0x05	; 5
     5fc:	8d 7f       	andi	r24, 0xFD	; 253
     5fe:	85 b9       	out	0x05, r24	; 5
     600:	08 95       	ret
     602:	85 b1       	in	r24, 0x05	; 5
     604:	8b 7f       	andi	r24, 0xFB	; 251
     606:	85 b9       	out	0x05, r24	; 5
     608:	08 95       	ret
     60a:	85 b1       	in	r24, 0x05	; 5
     60c:	87 7f       	andi	r24, 0xF7	; 247
     60e:	85 b9       	out	0x05, r24	; 5
     610:	08 95       	ret

00000612 <PAD_leer>:
     612:	cf 93       	push	r28
     614:	df 93       	push	r29
     616:	10 92 2b 04 	sts	0x042B, r1	; 0x80042b <key>
     61a:	c1 e0       	ldi	r28, 0x01	; 1
     61c:	d0 e0       	ldi	r29, 0x00	; 0
     61e:	0f c0       	rjmp	.+30     	; 0x63e <PAD_leer+0x2c>
     620:	8c 2f       	mov	r24, r28
     622:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <FILA_init>
     626:	0e 94 9e 02 	call	0x53c	; 0x53c <COLUMNA_barido>
     62a:	88 23       	and	r24, r24
     62c:	39 f0       	breq	.+14     	; 0x63c <PAD_leer+0x2a>
     62e:	e0 91 2b 04 	lds	r30, 0x042B	; 0x80042b <key>
     632:	f0 e0       	ldi	r31, 0x00	; 0
     634:	ec 5e       	subi	r30, 0xEC	; 236
     636:	fe 4f       	sbci	r31, 0xFE	; 254
     638:	80 81       	ld	r24, Z
     63a:	05 c0       	rjmp	.+10     	; 0x646 <PAD_leer+0x34>
     63c:	21 96       	adiw	r28, 0x01	; 1
     63e:	c5 30       	cpi	r28, 0x05	; 5
     640:	d1 05       	cpc	r29, r1
     642:	74 f3       	brlt	.-36     	; 0x620 <PAD_leer+0xe>
     644:	80 e0       	ldi	r24, 0x00	; 0
     646:	df 91       	pop	r29
     648:	cf 91       	pop	r28
     64a:	08 95       	ret

0000064c <DATA_PTL_cargarStock>:
     64c:	0f 93       	push	r16
     64e:	1f 93       	push	r17
     650:	cf 93       	push	r28
     652:	df 93       	push	r29
     654:	00 d0       	rcall	.+0      	; 0x656 <DATA_PTL_cargarStock+0xa>
     656:	cd b7       	in	r28, 0x3d	; 61
     658:	de b7       	in	r29, 0x3e	; 62
     65a:	82 e3       	ldi	r24, 0x32	; 50
     65c:	94 e0       	ldi	r25, 0x04	; 4
     65e:	9a 83       	std	Y+2, r25	; 0x02
     660:	89 83       	std	Y+1, r24	; 0x01
     662:	00 e0       	ldi	r16, 0x00	; 0
     664:	10 e0       	ldi	r17, 0x00	; 0
     666:	1c c0       	rjmp	.+56     	; 0x6a0 <DATA_PTL_cargarStock+0x54>
     668:	4a e0       	ldi	r20, 0x0A	; 10
     66a:	50 e0       	ldi	r21, 0x00	; 0
     66c:	be 01       	movw	r22, r28
     66e:	6f 5f       	subi	r22, 0xFF	; 255
     670:	7f 4f       	sbci	r23, 0xFF	; 255
     672:	0e 94 17 09 	call	0x122e	; 0x122e <strtol>
     676:	f8 01       	movw	r30, r16
     678:	ee 0f       	add	r30, r30
     67a:	ff 1f       	adc	r31, r31
     67c:	e0 0f       	add	r30, r16
     67e:	f1 1f       	adc	r31, r17
     680:	ee 0f       	add	r30, r30
     682:	ff 1f       	adc	r31, r31
     684:	e4 5d       	subi	r30, 0xD4	; 212
     686:	fb 4f       	sbci	r31, 0xFB	; 251
     688:	70 a7       	std	Z+40, r23	; 0x28
     68a:	67 a3       	std	Z+39, r22	; 0x27
     68c:	0f 5f       	subi	r16, 0xFF	; 255
     68e:	1f 4f       	sbci	r17, 0xFF	; 255
     690:	e9 81       	ldd	r30, Y+1	; 0x01
     692:	fa 81       	ldd	r31, Y+2	; 0x02
     694:	80 81       	ld	r24, Z
     696:	8a 32       	cpi	r24, 0x2A	; 42
     698:	19 f4       	brne	.+6      	; 0x6a0 <DATA_PTL_cargarStock+0x54>
     69a:	31 96       	adiw	r30, 0x01	; 1
     69c:	fa 83       	std	Y+2, r31	; 0x02
     69e:	e9 83       	std	Y+1, r30	; 0x01
     6a0:	89 81       	ldd	r24, Y+1	; 0x01
     6a2:	9a 81       	ldd	r25, Y+2	; 0x02
     6a4:	fc 01       	movw	r30, r24
     6a6:	20 81       	ld	r18, Z
     6a8:	22 23       	and	r18, r18
     6aa:	19 f0       	breq	.+6      	; 0x6b2 <DATA_PTL_cargarStock+0x66>
     6ac:	09 30       	cpi	r16, 0x09	; 9
     6ae:	11 05       	cpc	r17, r1
     6b0:	dc f2       	brlt	.-74     	; 0x668 <DATA_PTL_cargarStock+0x1c>
     6b2:	10 93 52 04 	sts	0x0452, r17	; 0x800452 <PTL_datos+0x26>
     6b6:	00 93 51 04 	sts	0x0451, r16	; 0x800451 <PTL_datos+0x25>
     6ba:	0f 90       	pop	r0
     6bc:	0f 90       	pop	r0
     6be:	df 91       	pop	r29
     6c0:	cf 91       	pop	r28
     6c2:	1f 91       	pop	r17
     6c4:	0f 91       	pop	r16
     6c6:	08 95       	ret

000006c8 <DATA_PTL_vaciarCeldas>:
     6c8:	80 e0       	ldi	r24, 0x00	; 0
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	0c c0       	rjmp	.+24     	; 0x6e6 <DATA_PTL_vaciarCeldas+0x1e>
     6ce:	fc 01       	movw	r30, r24
     6d0:	ee 0f       	add	r30, r30
     6d2:	ff 1f       	adc	r31, r31
     6d4:	e8 0f       	add	r30, r24
     6d6:	f9 1f       	adc	r31, r25
     6d8:	ee 0f       	add	r30, r30
     6da:	ff 1f       	adc	r31, r31
     6dc:	eb 50       	subi	r30, 0x0B	; 11
     6de:	fc 4f       	sbci	r31, 0xFC	; 252
     6e0:	11 82       	std	Z+1, r1	; 0x01
     6e2:	10 82       	st	Z, r1
     6e4:	01 96       	adiw	r24, 0x01	; 1
     6e6:	89 30       	cpi	r24, 0x09	; 9
     6e8:	91 05       	cpc	r25, r1
     6ea:	8c f3       	brlt	.-30     	; 0x6ce <DATA_PTL_vaciarCeldas+0x6>
     6ec:	08 95       	ret

000006ee <DATA_PTL_cargaXY>:
     6ee:	e5 ef       	ldi	r30, 0xF5	; 245
     6f0:	f3 e0       	ldi	r31, 0x03	; 3
     6f2:	84 e0       	ldi	r24, 0x04	; 4
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	93 83       	std	Z+3, r25	; 0x03
     6f8:	82 83       	std	Z+2, r24	; 0x02
     6fa:	62 e0       	ldi	r22, 0x02	; 2
     6fc:	70 e0       	ldi	r23, 0x00	; 0
     6fe:	75 83       	std	Z+5, r23	; 0x05
     700:	64 83       	std	Z+4, r22	; 0x04
     702:	4b e0       	ldi	r20, 0x0B	; 11
     704:	50 e0       	ldi	r21, 0x00	; 0
     706:	51 87       	std	Z+9, r21	; 0x09
     708:	40 87       	std	Z+8, r20	; 0x08
     70a:	73 87       	std	Z+11, r23	; 0x0b
     70c:	62 87       	std	Z+10, r22	; 0x0a
     70e:	22 e1       	ldi	r18, 0x12	; 18
     710:	30 e0       	ldi	r19, 0x00	; 0
     712:	37 87       	std	Z+15, r19	; 0x0f
     714:	26 87       	std	Z+14, r18	; 0x0e
     716:	71 8b       	std	Z+17, r23	; 0x11
     718:	60 8b       	std	Z+16, r22	; 0x10
     71a:	95 8b       	std	Z+21, r25	; 0x15
     71c:	84 8b       	std	Z+20, r24	; 0x14
     71e:	63 e0       	ldi	r22, 0x03	; 3
     720:	70 e0       	ldi	r23, 0x00	; 0
     722:	77 8b       	std	Z+23, r23	; 0x17
     724:	66 8b       	std	Z+22, r22	; 0x16
     726:	53 8f       	std	Z+27, r21	; 0x1b
     728:	42 8f       	std	Z+26, r20	; 0x1a
     72a:	75 8f       	std	Z+29, r23	; 0x1d
     72c:	64 8f       	std	Z+28, r22	; 0x1c
     72e:	31 a3       	std	Z+33, r19	; 0x21
     730:	20 a3       	std	Z+32, r18	; 0x20
     732:	73 a3       	std	Z+35, r23	; 0x23
     734:	62 a3       	std	Z+34, r22	; 0x22
     736:	97 a3       	std	Z+39, r25	; 0x27
     738:	86 a3       	std	Z+38, r24	; 0x26
     73a:	91 a7       	std	Z+41, r25	; 0x29
     73c:	80 a7       	std	Z+40, r24	; 0x28
     73e:	55 a7       	std	Z+45, r21	; 0x2d
     740:	44 a7       	std	Z+44, r20	; 0x2c
     742:	97 a7       	std	Z+47, r25	; 0x2f
     744:	86 a7       	std	Z+46, r24	; 0x2e
     746:	33 ab       	std	Z+51, r19	; 0x33
     748:	22 ab       	std	Z+50, r18	; 0x32
     74a:	95 ab       	std	Z+53, r25	; 0x35
     74c:	84 ab       	std	Z+52, r24	; 0x34
     74e:	08 95       	ret

00000750 <LCD_celdas>:
     750:	ef 92       	push	r14
     752:	ff 92       	push	r15
     754:	0f 93       	push	r16
     756:	1f 93       	push	r17
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	00 e0       	ldi	r16, 0x00	; 0
     75e:	10 e0       	ldi	r17, 0x00	; 0
     760:	28 c0       	rjmp	.+80     	; 0x7b2 <LCD_celdas+0x62>
     762:	e8 01       	movw	r28, r16
     764:	cc 0f       	add	r28, r28
     766:	dd 1f       	adc	r29, r29
     768:	c0 0f       	add	r28, r16
     76a:	d1 1f       	adc	r29, r17
     76c:	cc 0f       	add	r28, r28
     76e:	dd 1f       	adc	r29, r29
     770:	cb 50       	subi	r28, 0x0B	; 11
     772:	dc 4f       	sbci	r29, 0xFC	; 252
     774:	6c 81       	ldd	r22, Y+4	; 0x04
     776:	8a 81       	ldd	r24, Y+2	; 0x02
     778:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     77c:	88 81       	ld	r24, Y
     77e:	99 81       	ldd	r25, Y+1	; 0x01
     780:	0f 2e       	mov	r0, r31
     782:	fa e0       	ldi	r31, 0x0A	; 10
     784:	ef 2e       	mov	r14, r31
     786:	f1 2c       	mov	r15, r1
     788:	f0 2d       	mov	r31, r0
     78a:	b7 01       	movw	r22, r14
     78c:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <__divmodhi4>
     790:	cb 01       	movw	r24, r22
     792:	0e 94 12 01 	call	0x224	; 0x224 <LCD_num>
     796:	6c 81       	ldd	r22, Y+4	; 0x04
     798:	8a 81       	ldd	r24, Y+2	; 0x02
     79a:	8f 5f       	subi	r24, 0xFF	; 255
     79c:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     7a0:	88 81       	ld	r24, Y
     7a2:	99 81       	ldd	r25, Y+1	; 0x01
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <__divmodhi4>
     7aa:	0e 94 12 01 	call	0x224	; 0x224 <LCD_num>
     7ae:	0f 5f       	subi	r16, 0xFF	; 255
     7b0:	1f 4f       	sbci	r17, 0xFF	; 255
     7b2:	09 30       	cpi	r16, 0x09	; 9
     7b4:	11 05       	cpc	r17, r1
     7b6:	ac f2       	brlt	.-86     	; 0x762 <LCD_celdas+0x12>
     7b8:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <indiceCelda>
     7bc:	90 91 f2 03 	lds	r25, 0x03F2	; 0x8003f2 <indiceCelda+0x1>
     7c0:	fc 01       	movw	r30, r24
     7c2:	ee 0f       	add	r30, r30
     7c4:	ff 1f       	adc	r31, r31
     7c6:	df 01       	movw	r26, r30
     7c8:	a8 0f       	add	r26, r24
     7ca:	b9 1f       	adc	r27, r25
     7cc:	aa 0f       	add	r26, r26
     7ce:	bb 1f       	adc	r27, r27
     7d0:	ab 50       	subi	r26, 0x0B	; 11
     7d2:	bc 4f       	sbci	r27, 0xFC	; 252
     7d4:	14 96       	adiw	r26, 0x04	; 4
     7d6:	6c 91       	ld	r22, X
     7d8:	14 97       	sbiw	r26, 0x04	; 4
     7da:	fd 01       	movw	r30, r26
     7dc:	82 81       	ldd	r24, Z+2	; 0x02
     7de:	82 50       	subi	r24, 0x02	; 2
     7e0:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     7e4:	8d ee       	ldi	r24, 0xED	; 237
     7e6:	92 e0       	ldi	r25, 0x02	; 2
     7e8:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     7ec:	df 91       	pop	r29
     7ee:	cf 91       	pop	r28
     7f0:	1f 91       	pop	r17
     7f2:	0f 91       	pop	r16
     7f4:	ff 90       	pop	r15
     7f6:	ef 90       	pop	r14
     7f8:	08 95       	ret

000007fa <LCD_agregar_interno>:
     7fa:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     7fe:	61 e0       	ldi	r22, 0x01	; 1
     800:	81 e0       	ldi	r24, 0x01	; 1
     802:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     806:	8f ee       	ldi	r24, 0xEF	; 239
     808:	92 e0       	ldi	r25, 0x02	; 2
     80a:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     80e:	62 e0       	ldi	r22, 0x02	; 2
     810:	81 e0       	ldi	r24, 0x01	; 1
     812:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     816:	84 e0       	ldi	r24, 0x04	; 4
     818:	93 e0       	ldi	r25, 0x03	; 3
     81a:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     81e:	63 e0       	ldi	r22, 0x03	; 3
     820:	81 e0       	ldi	r24, 0x01	; 1
     822:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     826:	89 e1       	ldi	r24, 0x19	; 25
     828:	93 e0       	ldi	r25, 0x03	; 3
     82a:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     82e:	64 e0       	ldi	r22, 0x04	; 4
     830:	81 e0       	ldi	r24, 0x01	; 1
     832:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     836:	8e e2       	ldi	r24, 0x2E	; 46
     838:	93 e0       	ldi	r25, 0x03	; 3
     83a:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     83e:	0e 94 a8 03 	call	0x750	; 0x750 <LCD_celdas>
     842:	08 95       	ret

00000844 <LCD_quitar_interno>:
     844:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     848:	61 e0       	ldi	r22, 0x01	; 1
     84a:	81 e0       	ldi	r24, 0x01	; 1
     84c:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     850:	83 e4       	ldi	r24, 0x43	; 67
     852:	93 e0       	ldi	r25, 0x03	; 3
     854:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     858:	62 e0       	ldi	r22, 0x02	; 2
     85a:	81 e0       	ldi	r24, 0x01	; 1
     85c:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     860:	84 e0       	ldi	r24, 0x04	; 4
     862:	93 e0       	ldi	r25, 0x03	; 3
     864:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     868:	63 e0       	ldi	r22, 0x03	; 3
     86a:	81 e0       	ldi	r24, 0x01	; 1
     86c:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     870:	89 e1       	ldi	r24, 0x19	; 25
     872:	93 e0       	ldi	r25, 0x03	; 3
     874:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     878:	64 e0       	ldi	r22, 0x04	; 4
     87a:	81 e0       	ldi	r24, 0x01	; 1
     87c:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     880:	8e e2       	ldi	r24, 0x2E	; 46
     882:	93 e0       	ldi	r25, 0x03	; 3
     884:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     888:	0e 94 a8 03 	call	0x750	; 0x750 <LCD_celdas>
     88c:	08 95       	ret

0000088e <LCD_stock>:
     88e:	cf 92       	push	r12
     890:	df 92       	push	r13
     892:	ef 92       	push	r14
     894:	ff 92       	push	r15
     896:	0f 93       	push	r16
     898:	1f 93       	push	r17
     89a:	cf 93       	push	r28
     89c:	df 93       	push	r29
     89e:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     8a2:	61 e0       	ldi	r22, 0x01	; 1
     8a4:	81 e0       	ldi	r24, 0x01	; 1
     8a6:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     8aa:	88 e5       	ldi	r24, 0x58	; 88
     8ac:	93 e0       	ldi	r25, 0x03	; 3
     8ae:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     8b2:	62 e0       	ldi	r22, 0x02	; 2
     8b4:	81 e0       	ldi	r24, 0x01	; 1
     8b6:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     8ba:	84 e0       	ldi	r24, 0x04	; 4
     8bc:	93 e0       	ldi	r25, 0x03	; 3
     8be:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     8c2:	63 e0       	ldi	r22, 0x03	; 3
     8c4:	81 e0       	ldi	r24, 0x01	; 1
     8c6:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     8ca:	89 e1       	ldi	r24, 0x19	; 25
     8cc:	93 e0       	ldi	r25, 0x03	; 3
     8ce:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     8d2:	64 e0       	ldi	r22, 0x04	; 4
     8d4:	81 e0       	ldi	r24, 0x01	; 1
     8d6:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     8da:	8e e2       	ldi	r24, 0x2E	; 46
     8dc:	93 e0       	ldi	r25, 0x03	; 3
     8de:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     8e2:	e1 2c       	mov	r14, r1
     8e4:	f1 2c       	mov	r15, r1
     8e6:	32 c0       	rjmp	.+100    	; 0x94c <__stack+0x4d>
     8e8:	e7 01       	movw	r28, r14
     8ea:	cc 0f       	add	r28, r28
     8ec:	dd 1f       	adc	r29, r29
     8ee:	8e 01       	movw	r16, r28
     8f0:	0e 0d       	add	r16, r14
     8f2:	1f 1d       	adc	r17, r15
     8f4:	00 0f       	add	r16, r16
     8f6:	11 1f       	adc	r17, r17
     8f8:	0b 50       	subi	r16, 0x0B	; 11
     8fa:	1c 4f       	sbci	r17, 0xFC	; 252
     8fc:	f8 01       	movw	r30, r16
     8fe:	64 81       	ldd	r22, Z+4	; 0x04
     900:	82 81       	ldd	r24, Z+2	; 0x02
     902:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     906:	ce 0d       	add	r28, r14
     908:	df 1d       	adc	r29, r15
     90a:	cc 0f       	add	r28, r28
     90c:	dd 1f       	adc	r29, r29
     90e:	c4 5d       	subi	r28, 0xD4	; 212
     910:	db 4f       	sbci	r29, 0xFB	; 251
     912:	8f a1       	ldd	r24, Y+39	; 0x27
     914:	98 a5       	ldd	r25, Y+40	; 0x28
     916:	0f 2e       	mov	r0, r31
     918:	fa e0       	ldi	r31, 0x0A	; 10
     91a:	cf 2e       	mov	r12, r31
     91c:	d1 2c       	mov	r13, r1
     91e:	f0 2d       	mov	r31, r0
     920:	b6 01       	movw	r22, r12
     922:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <__divmodhi4>
     926:	cb 01       	movw	r24, r22
     928:	0e 94 12 01 	call	0x224	; 0x224 <LCD_num>
     92c:	f8 01       	movw	r30, r16
     92e:	64 81       	ldd	r22, Z+4	; 0x04
     930:	82 81       	ldd	r24, Z+2	; 0x02
     932:	8f 5f       	subi	r24, 0xFF	; 255
     934:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     938:	8f a1       	ldd	r24, Y+39	; 0x27
     93a:	98 a5       	ldd	r25, Y+40	; 0x28
     93c:	b6 01       	movw	r22, r12
     93e:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <__divmodhi4>
     942:	0e 94 12 01 	call	0x224	; 0x224 <LCD_num>
     946:	ff ef       	ldi	r31, 0xFF	; 255
     948:	ef 1a       	sub	r14, r31
     94a:	ff 0a       	sbc	r15, r31
     94c:	89 e0       	ldi	r24, 0x09	; 9
     94e:	e8 16       	cp	r14, r24
     950:	f1 04       	cpc	r15, r1
     952:	54 f2       	brlt	.-108    	; 0x8e8 <LCD_stock+0x5a>
     954:	df 91       	pop	r29
     956:	cf 91       	pop	r28
     958:	1f 91       	pop	r17
     95a:	0f 91       	pop	r16
     95c:	ff 90       	pop	r15
     95e:	ef 90       	pop	r14
     960:	df 90       	pop	r13
     962:	cf 90       	pop	r12
     964:	08 95       	ret

00000966 <LCD_enviando>:
     966:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     96a:	61 e0       	ldi	r22, 0x01	; 1
     96c:	81 e0       	ldi	r24, 0x01	; 1
     96e:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     972:	87 e5       	ldi	r24, 0x57	; 87
     974:	92 e0       	ldi	r25, 0x02	; 2
     976:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     97a:	62 e0       	ldi	r22, 0x02	; 2
     97c:	81 e0       	ldi	r24, 0x01	; 1
     97e:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     982:	8d e6       	ldi	r24, 0x6D	; 109
     984:	93 e0       	ldi	r25, 0x03	; 3
     986:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     98a:	63 e0       	ldi	r22, 0x03	; 3
     98c:	81 e0       	ldi	r24, 0x01	; 1
     98e:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     992:	86 e9       	ldi	r24, 0x96	; 150
     994:	92 e0       	ldi	r25, 0x02	; 2
     996:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     99a:	64 e0       	ldi	r22, 0x04	; 4
     99c:	81 e0       	ldi	r24, 0x01	; 1
     99e:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     9a2:	87 e5       	ldi	r24, 0x57	; 87
     9a4:	92 e0       	ldi	r25, 0x02	; 2
     9a6:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     9aa:	08 95       	ret

000009ac <LCD_vaciar>:
     9ac:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
     9b0:	61 e0       	ldi	r22, 0x01	; 1
     9b2:	81 e0       	ldi	r24, 0x01	; 1
     9b4:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     9b8:	87 e5       	ldi	r24, 0x57	; 87
     9ba:	92 e0       	ldi	r25, 0x02	; 2
     9bc:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     9c0:	62 e0       	ldi	r22, 0x02	; 2
     9c2:	81 e0       	ldi	r24, 0x01	; 1
     9c4:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     9c8:	82 e8       	ldi	r24, 0x82	; 130
     9ca:	93 e0       	ldi	r25, 0x03	; 3
     9cc:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     9d0:	63 e0       	ldi	r22, 0x03	; 3
     9d2:	81 e0       	ldi	r24, 0x01	; 1
     9d4:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     9d8:	87 e5       	ldi	r24, 0x57	; 87
     9da:	92 e0       	ldi	r25, 0x02	; 2
     9dc:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     9e0:	64 e0       	ldi	r22, 0x04	; 4
     9e2:	81 e0       	ldi	r24, 0x01	; 1
     9e4:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
     9e8:	87 e5       	ldi	r24, 0x57	; 87
     9ea:	92 e0       	ldi	r25, 0x02	; 2
     9ec:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     9f0:	08 95       	ret

000009f2 <BTH_init>:
#include <util/delay.h>
#include <string.h>

void BTH_init() {
	// Configura USART como UART
	UCSR0C &=~ (1<<UMSEL00) &~ (1<<UMSEL01);
     9f2:	e2 ec       	ldi	r30, 0xC2	; 194
     9f4:	f0 e0       	ldi	r31, 0x00	; 0
     9f6:	80 81       	ld	r24, Z
     9f8:	8f 73       	andi	r24, 0x3F	; 63
     9fa:	80 83       	st	Z, r24
	
	// Desactiva paridad
	UCSR0C &=~ (1<<UPM00) &~ (1<<UPM01);
     9fc:	80 81       	ld	r24, Z
     9fe:	8f 7c       	andi	r24, 0xCF	; 207
     a00:	80 83       	st	Z, r24
	
	// Bit de parada = 1
	UCSR0C &=~ (1<<USBS0);
     a02:	80 81       	ld	r24, Z
     a04:	87 7f       	andi	r24, 0xF7	; 247
     a06:	80 83       	st	Z, r24
	
	// Configura 8-bits para datos
	UCSR0C |= (1<<UCSZ00) | (1<<UCSZ01);
     a08:	80 81       	ld	r24, Z
     a0a:	86 60       	ori	r24, 0x06	; 6
     a0c:	80 83       	st	Z, r24
	UCSR0B &=~ (1<<UCSZ02);
     a0e:	e1 ec       	ldi	r30, 0xC1	; 193
     a10:	f0 e0       	ldi	r31, 0x00	; 0
     a12:	80 81       	ld	r24, Z
     a14:	8b 7f       	andi	r24, 0xFB	; 251
     a16:	80 83       	st	Z, r24
	
	// Calcula baudrate
	UCSR0A |= (1<<U2X0);
     a18:	a0 ec       	ldi	r26, 0xC0	; 192
     a1a:	b0 e0       	ldi	r27, 0x00	; 0
     a1c:	8c 91       	ld	r24, X
     a1e:	82 60       	ori	r24, 0x02	; 2
     a20:	8c 93       	st	X, r24
	UBRR0 = (F_CPU / 8 / 9600) - 1;
     a22:	8f ec       	ldi	r24, 0xCF	; 207
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     a2a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	// Habilita transmisión y recepción
	UCSR0B |= (1<<TXEN0) | (1<<RXEN0);
     a2e:	80 81       	ld	r24, Z
     a30:	88 61       	ori	r24, 0x18	; 24
     a32:	80 83       	st	Z, r24
     a34:	08 95       	ret

00000a36 <BTH_envia>:
	}
	PTL_datos.buffer_envio[i] = '\0'; // Termina la cadena
	BTH_envia("OK\n");
}	

void BTH_envia(char *data){
     a36:	bc 01       	movw	r22, r24
	int i = 0;
     a38:	20 e0       	ldi	r18, 0x00	; 0
     a3a:	30 e0       	ldi	r19, 0x00	; 0
	while(data[i] != '\0'){
     a3c:	08 c0       	rjmp	.+16     	; 0xa4e <BTH_envia+0x18>
		while (!(UCSR0A & (1<<UDRE0))); // Espera a que el buffer esté libre
     a3e:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     a42:	95 ff       	sbrs	r25, 5
     a44:	fc cf       	rjmp	.-8      	; 0xa3e <BTH_envia+0x8>
		UDR0 = data[i];
     a46:	40 93 c6 00 	sts	0x00C6, r20	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
		i++;
     a4a:	2f 5f       	subi	r18, 0xFF	; 255
     a4c:	3f 4f       	sbci	r19, 0xFF	; 255
	BTH_envia("OK\n");
}	

void BTH_envia(char *data){
	int i = 0;
	while(data[i] != '\0'){
     a4e:	fb 01       	movw	r30, r22
     a50:	e2 0f       	add	r30, r18
     a52:	f3 1f       	adc	r31, r19
     a54:	40 81       	ld	r20, Z
     a56:	41 11       	cpse	r20, r1
     a58:	f2 cf       	rjmp	.-28     	; 0xa3e <BTH_envia+0x8>
		while (!(UCSR0A & (1<<UDRE0))); // Espera a que el buffer esté libre
		UDR0 = data[i];
		i++;
	}
}
     a5a:	08 95       	ret

00000a5c <DATA_PTL_generarEnvio>:
	// Actualiza el undice de la celda
	PTL_datos.indiceCeldaStock = i;
}


void DATA_PTL_generarEnvio(struct datosPTL nuevoPTL) {
     a5c:	ef 92       	push	r14
     a5e:	ff 92       	push	r15
     a60:	0f 93       	push	r16
     a62:	1f 93       	push	r17
     a64:	cf 93       	push	r28
     a66:	df 93       	push	r29
     a68:	00 d0       	rcall	.+0      	; 0xa6a <DATA_PTL_generarEnvio+0xe>
     a6a:	1f 92       	push	r1
     a6c:	cd b7       	in	r28, 0x3d	; 61
     a6e:	de b7       	in	r29, 0x3e	; 62
	for (int i = 0; i < 9; i++) {
     a70:	00 e0       	ldi	r16, 0x00	; 0
     a72:	10 e0       	ldi	r17, 0x00	; 0
     a74:	32 c0       	rjmp	.+100    	; 0xada <DATA_PTL_generarEnvio+0x7e>
		char cantidad_celda[3]; 						// Almacena la cantidad de la celda
		sprintf(cantidad_celda, "%d", celdas[i].valor); // Pasa de int a char[]		
     a76:	f8 01       	movw	r30, r16
     a78:	ee 0f       	add	r30, r30
     a7a:	ff 1f       	adc	r31, r31
     a7c:	e0 0f       	add	r30, r16
     a7e:	f1 1f       	adc	r31, r17
     a80:	ee 0f       	add	r30, r30
     a82:	ff 1f       	adc	r31, r31
     a84:	eb 50       	subi	r30, 0x0B	; 11
     a86:	fc 4f       	sbci	r31, 0xFC	; 252
     a88:	81 81       	ldd	r24, Z+1	; 0x01
     a8a:	8f 93       	push	r24
     a8c:	80 81       	ld	r24, Z
     a8e:	8f 93       	push	r24
     a90:	8e e2       	ldi	r24, 0x2E	; 46
     a92:	91 e0       	ldi	r25, 0x01	; 1
     a94:	9f 93       	push	r25
     a96:	8f 93       	push	r24
     a98:	ce 01       	movw	r24, r28
     a9a:	01 96       	adiw	r24, 0x01	; 1
     a9c:	7c 01       	movw	r14, r24
     a9e:	9f 93       	push	r25
     aa0:	8f 93       	push	r24
     aa2:	0e 94 41 0a 	call	0x1482	; 0x1482 <sprintf>
		strcat(nuevoPTL.buffer_envio, cantidad_celda);  // Concatena la cantidad al buffer de envio
     aa6:	b7 01       	movw	r22, r14
     aa8:	ce 01       	movw	r24, r28
     aaa:	0e 96       	adiw	r24, 0x0e	; 14
     aac:	0e 94 36 0a 	call	0x146c	; 0x146c <strcat>
		if(i<8){
     ab0:	0f 90       	pop	r0
     ab2:	0f 90       	pop	r0
     ab4:	0f 90       	pop	r0
     ab6:	0f 90       	pop	r0
     ab8:	0f 90       	pop	r0
     aba:	0f 90       	pop	r0
     abc:	08 30       	cpi	r16, 0x08	; 8
     abe:	11 05       	cpc	r17, r1
     ac0:	54 f4       	brge	.+20     	; 0xad6 <DATA_PTL_generarEnvio+0x7a>
			strcat(nuevoPTL.buffer_envio, "*"); 		// Agrega * al final de cada celda menos la última
     ac2:	fe 01       	movw	r30, r28
     ac4:	3e 96       	adiw	r30, 0x0e	; 14
     ac6:	01 90       	ld	r0, Z+
     ac8:	00 20       	and	r0, r0
     aca:	e9 f7       	brne	.-6      	; 0xac6 <DATA_PTL_generarEnvio+0x6a>
     acc:	31 97       	sbiw	r30, 0x01	; 1
     ace:	8a e2       	ldi	r24, 0x2A	; 42
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	91 83       	std	Z+1, r25	; 0x01
     ad4:	80 83       	st	Z, r24
	PTL_datos.indiceCeldaStock = i;
}


void DATA_PTL_generarEnvio(struct datosPTL nuevoPTL) {
	for (int i = 0; i < 9; i++) {
     ad6:	0f 5f       	subi	r16, 0xFF	; 255
     ad8:	1f 4f       	sbci	r17, 0xFF	; 255
     ada:	09 30       	cpi	r16, 0x09	; 9
     adc:	11 05       	cpc	r17, r1
     ade:	5c f2       	brlt	.-106    	; 0xa76 <DATA_PTL_generarEnvio+0x1a>
		strcat(nuevoPTL.buffer_envio, cantidad_celda);  // Concatena la cantidad al buffer de envio
		if(i<8){
			strcat(nuevoPTL.buffer_envio, "*"); 		// Agrega * al final de cada celda menos la última
		}	
	}
	strcat(nuevoPTL.buffer_envio, "\n"); // Agrega \n al final del buffer
     ae0:	ce 01       	movw	r24, r28
     ae2:	0e 96       	adiw	r24, 0x0e	; 14
     ae4:	fc 01       	movw	r30, r24
     ae6:	01 90       	ld	r0, Z+
     ae8:	00 20       	and	r0, r0
     aea:	e9 f7       	brne	.-6      	; 0xae6 <DATA_PTL_generarEnvio+0x8a>
     aec:	31 97       	sbiw	r30, 0x01	; 1
     aee:	2a e0       	ldi	r18, 0x0A	; 10
     af0:	30 e0       	ldi	r19, 0x00	; 0
     af2:	31 83       	std	Z+1, r19	; 0x01
     af4:	20 83       	st	Z, r18
	// CREOQ UE HAY QUE SACAR EL DE ABAJO
	BTH_envia(nuevoPTL.buffer_envio);
     af6:	0e 94 1b 05 	call	0xa36	; 0xa36 <BTH_envia>
}
     afa:	0f 90       	pop	r0
     afc:	0f 90       	pop	r0
     afe:	0f 90       	pop	r0
     b00:	df 91       	pop	r29
     b02:	cf 91       	pop	r28
     b04:	1f 91       	pop	r17
     b06:	0f 91       	pop	r16
     b08:	ff 90       	pop	r15
     b0a:	ef 90       	pop	r14
     b0c:	08 95       	ret

00000b0e <BTH_recibe>:
	UCSR0B |= (1<<TXEN0) | (1<<RXEN0);
}

void BTH_recibe() {
	// Se limpia el buffer de envio.
	memset(PTL_datos.buffer_envio, 0, sizeof(PTL_datos.buffer_envio));
     b0e:	83 e2       	ldi	r24, 0x23	; 35
     b10:	ee e2       	ldi	r30, 0x2E	; 46
     b12:	f4 e0       	ldi	r31, 0x04	; 4
     b14:	df 01       	movw	r26, r30
     b16:	1d 92       	st	X+, r1
     b18:	8a 95       	dec	r24
     b1a:	e9 f7       	brne	.-6      	; 0xb16 <BTH_recibe+0x8>
	int i = 0;
     b1c:	20 e0       	ldi	r18, 0x00	; 0
     b1e:	30 e0       	ldi	r19, 0x00	; 0
	
	while (i < sizeof(PTL_datos.buffer_envio) - 1) {
     b20:	0e c0       	rjmp	.+28     	; 0xb3e <BTH_recibe+0x30>
		while (!(UCSR0A & (1<<RXC0))); // Espera a que haya datos recibidos o se agote el tiempo
     b22:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     b26:	88 23       	and	r24, r24
     b28:	e4 f7       	brge	.-8      	; 0xb22 <BTH_recibe+0x14>
		
		PTL_datos.buffer_envio[i] = UDR0;
     b2a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     b2e:	f9 01       	movw	r30, r18
     b30:	e4 5d       	subi	r30, 0xD4	; 212
     b32:	fb 4f       	sbci	r31, 0xFB	; 251
     b34:	82 83       	std	Z+2, r24	; 0x02
		if (PTL_datos.buffer_envio[i] == '\n') { // Espera el salto de línea
     b36:	8a 30       	cpi	r24, 0x0A	; 10
     b38:	29 f0       	breq	.+10     	; 0xb44 <BTH_recibe+0x36>
			break;
		}
		i++;
     b3a:	2f 5f       	subi	r18, 0xFF	; 255
     b3c:	3f 4f       	sbci	r19, 0xFF	; 255
void BTH_recibe() {
	// Se limpia el buffer de envio.
	memset(PTL_datos.buffer_envio, 0, sizeof(PTL_datos.buffer_envio));
	int i = 0;
	
	while (i < sizeof(PTL_datos.buffer_envio) - 1) {
     b3e:	22 32       	cpi	r18, 0x22	; 34
     b40:	31 05       	cpc	r19, r1
     b42:	78 f3       	brcs	.-34     	; 0xb22 <BTH_recibe+0x14>
		if (PTL_datos.buffer_envio[i] == '\n') { // Espera el salto de línea
			break;
		}
		i++;
	}
	PTL_datos.buffer_envio[i] = '\0'; // Termina la cadena
     b44:	f9 01       	movw	r30, r18
     b46:	e4 5d       	subi	r30, 0xD4	; 212
     b48:	fb 4f       	sbci	r31, 0xFB	; 251
     b4a:	12 82       	std	Z+2, r1	; 0x02
	BTH_envia("OK\n");
     b4c:	80 ec       	ldi	r24, 0xC0	; 192
     b4e:	93 e0       	ldi	r25, 0x03	; 3
     b50:	0e 94 1b 05 	call	0xa36	; 0xa36 <BTH_envia>
     b54:	08 95       	ret

00000b56 <main>:
bool decenasCargadas = false;
bool modo_espera = false;

int main(void){
	int modo_debug = 0;
	LCD_instanciar();
     b56:	0e 94 a4 00 	call	0x148	; 0x148 <LCD_instanciar>
	DATA_PTL_cargaXY();
     b5a:	0e 94 77 03 	call	0x6ee	; 0x6ee <DATA_PTL_cargaXY>
	BTH_init();
     b5e:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <BTH_init>
	PAD_init();
     b62:	0e 94 79 02 	call	0x4f2	; 0x4f2 <PAD_init>
    
  
  LCD_clear();
     b66:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
	LCD_goto(1,1);
     b6a:	61 e0       	ldi	r22, 0x01	; 1
     b6c:	81 e0       	ldi	r24, 0x01	; 1
     b6e:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
	LCD_print("  Inicializando LCD");
     b72:	84 ec       	ldi	r24, 0xC4	; 196
     b74:	93 e0       	ldi	r25, 0x03	; 3
     b76:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b7a:	2f ef       	ldi	r18, 0xFF	; 255
     b7c:	89 e6       	ldi	r24, 0x69	; 105
     b7e:	98 e1       	ldi	r25, 0x18	; 24
     b80:	21 50       	subi	r18, 0x01	; 1
     b82:	80 40       	sbci	r24, 0x00	; 0
     b84:	90 40       	sbci	r25, 0x00	; 0
     b86:	e1 f7       	brne	.-8      	; 0xb80 <main+0x2a>
     b88:	00 c0       	rjmp	.+0      	; 0xb8a <main+0x34>
     b8a:	00 00       	nop
  _delay_ms(500); 
  // RECIBIR Y PROCESAR NUEVO STOCK
  BTH_envia("AT$C\0");
     b8c:	84 e2       	ldi	r24, 0x24	; 36
     b8e:	91 e0       	ldi	r25, 0x01	; 1
     b90:	0e 94 1b 05 	call	0xa36	; 0xa36 <BTH_envia>
     b94:	af ef       	ldi	r26, 0xFF	; 255
     b96:	b7 ea       	ldi	r27, 0xA7	; 167
     b98:	21 e6       	ldi	r18, 0x61	; 97
     b9a:	a1 50       	subi	r26, 0x01	; 1
     b9c:	b0 40       	sbci	r27, 0x00	; 0
     b9e:	20 40       	sbci	r18, 0x00	; 0
     ba0:	e1 f7       	brne	.-8      	; 0xb9a <main+0x44>
     ba2:	00 c0       	rjmp	.+0      	; 0xba4 <main+0x4e>
     ba4:	00 00       	nop
  _delay_ms(2000); 
  BTH_recibe();
     ba6:	0e 94 87 05 	call	0xb0e	; 0xb0e <BTH_recibe>
  DATA_PTL_cargarStock();
     baa:	0e 94 26 03 	call	0x64c	; 0x64c <DATA_PTL_cargarStock>
     bae:	8f ef       	ldi	r24, 0xFF	; 255
     bb0:	93 ed       	ldi	r25, 0xD3	; 211
     bb2:	a0 e3       	ldi	r26, 0x30	; 48
     bb4:	81 50       	subi	r24, 0x01	; 1
     bb6:	90 40       	sbci	r25, 0x00	; 0
     bb8:	a0 40       	sbci	r26, 0x00	; 0
     bba:	e1 f7       	brne	.-8      	; 0xbb4 <main+0x5e>
     bbc:	00 c0       	rjmp	.+0      	; 0xbbe <main+0x68>
     bbe:	00 00       	nop
  _delay_ms(1000); 

	menu_estadoActual = opc_bth;
     bc0:	10 92 f0 03 	sts	0x03F0, r1	; 0x8003f0 <menu_estadoActual>
	LCD_menu[menu_estadoActual]();
     bc4:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     bc8:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     bcc:	09 95       	icall

  
	while (1){
		uint8_t key = PAD_leer(); // Si se presiona el pad, guarda la key presionada
     bce:	0e 94 09 03 	call	0x612	; 0x612 <PAD_leer>
    
		if (key != 0){
     bd2:	88 23       	and	r24, r24
     bd4:	09 f4       	brne	.+2      	; 0xbd8 <main+0x82>
     bd6:	c7 c2       	rjmp	.+1422   	; 0x1166 <main+0x610>
			switch (menu_estadoActual){
     bd8:	e0 91 f0 03 	lds	r30, 0x03F0	; 0x8003f0 <menu_estadoActual>
     bdc:	4e 2f       	mov	r20, r30
     bde:	50 e0       	ldi	r21, 0x00	; 0
     be0:	49 30       	cpi	r20, 0x09	; 9
     be2:	51 05       	cpc	r21, r1
     be4:	08 f0       	brcs	.+2      	; 0xbe8 <main+0x92>
     be6:	ab c2       	rjmp	.+1366   	; 0x113e <main+0x5e8>
     be8:	fa 01       	movw	r30, r20
     bea:	ec 5c       	subi	r30, 0xCC	; 204
     bec:	ff 4f       	sbci	r31, 0xFF	; 255
     bee:	0c 94 fd 08 	jmp	0x11fa	; 0x11fa <__tablejump2__>
        case opc_agregar:
          switch (key){
     bf2:	80 33       	cpi	r24, 0x30	; 48
     bf4:	19 f0       	breq	.+6      	; 0xbfc <main+0xa6>
     bf6:	8e 33       	cpi	r24, 0x3E	; 62
     bf8:	29 f0       	breq	.+10     	; 0xc04 <main+0xae>
     bfa:	a1 c2       	rjmp	.+1346   	; 0x113e <main+0x5e8>
          case '0':
            menu_estadoActual = opc_agregar_interno;
     bfc:	83 e0       	ldi	r24, 0x03	; 3
     bfe:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
            break;
     c02:	9d c2       	rjmp	.+1338   	; 0x113e <main+0x5e8>
          case '>':
            menu_estadoActual = opc_bth;
     c04:	10 92 f0 03 	sts	0x03F0, r1	; 0x8003f0 <menu_estadoActual>
            break;
     c08:	9a c2       	rjmp	.+1332   	; 0x113e <main+0x5e8>
          }
        break;
        
        case opc_bth:
          switch (key){
     c0a:	8c 33       	cpi	r24, 0x3C	; 60
     c0c:	49 f0       	breq	.+18     	; 0xc20 <main+0xca>
     c0e:	8e 33       	cpi	r24, 0x3E	; 62
     c10:	59 f0       	breq	.+22     	; 0xc28 <main+0xd2>
     c12:	80 33       	cpi	r24, 0x30	; 48
     c14:	09 f0       	breq	.+2      	; 0xc18 <main+0xc2>
     c16:	93 c2       	rjmp	.+1318   	; 0x113e <main+0x5e8>
          case '0':
            menu_estadoActual = opc_bth_interno;
     c18:	85 e0       	ldi	r24, 0x05	; 5
     c1a:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
            break;
     c1e:	8f c2       	rjmp	.+1310   	; 0x113e <main+0x5e8>
          case '<':
            menu_estadoActual = opc_agregar;
     c20:	81 e0       	ldi	r24, 0x01	; 1
     c22:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
            break;
     c26:	8b c2       	rjmp	.+1302   	; 0x113e <main+0x5e8>
          case '>':
            menu_estadoActual = opc_quitar;
     c28:	82 e0       	ldi	r24, 0x02	; 2
     c2a:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
            break;
     c2e:	87 c2       	rjmp	.+1294   	; 0x113e <main+0x5e8>
          }
        break;
        
        case opc_quitar:
          switch (key){
     c30:	80 33       	cpi	r24, 0x30	; 48
     c32:	19 f0       	breq	.+6      	; 0xc3a <main+0xe4>
     c34:	8c 33       	cpi	r24, 0x3C	; 60
     c36:	29 f0       	breq	.+10     	; 0xc42 <main+0xec>
     c38:	82 c2       	rjmp	.+1284   	; 0x113e <main+0x5e8>
          case '0':
            menu_estadoActual = opc_quitar_interno;
     c3a:	84 e0       	ldi	r24, 0x04	; 4
     c3c:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
            break;
     c40:	7e c2       	rjmp	.+1276   	; 0x113e <main+0x5e8>
          case '<':
            menu_estadoActual = opc_bth;
     c42:	10 92 f0 03 	sts	0x03F0, r1	; 0x8003f0 <menu_estadoActual>
            break;
     c46:	7b c2       	rjmp	.+1270   	; 0x113e <main+0x5e8>
                  | < # >     Opcion para agregar objetos al PTL   < # >   |
                  |  \ /                                            \ /    |
                  |--------------------------------------------------------|
          */
        case opc_agregar_interno:
          switch (key){
     c48:	81 34       	cpi	r24, 0x41	; 65
     c4a:	89 f0       	breq	.+34     	; 0xc6e <main+0x118>
     c4c:	38 f4       	brcc	.+14     	; 0xc5c <main+0x106>
     c4e:	8c 33       	cpi	r24, 0x3C	; 60
     c50:	09 f4       	brne	.+2      	; 0xc54 <main+0xfe>
     c52:	71 c0       	rjmp	.+226    	; 0xd36 <main+0x1e0>
     c54:	8e 33       	cpi	r24, 0x3E	; 62
     c56:	09 f4       	brne	.+2      	; 0xc5a <main+0x104>
     c58:	83 c0       	rjmp	.+262    	; 0xd60 <main+0x20a>
     c5a:	96 c0       	rjmp	.+300    	; 0xd88 <main+0x232>
     c5c:	83 34       	cpi	r24, 0x43	; 67
     c5e:	09 f4       	brne	.+2      	; 0xc62 <main+0x10c>
     c60:	58 c0       	rjmp	.+176    	; 0xd12 <main+0x1bc>
     c62:	08 f4       	brcc	.+2      	; 0xc66 <main+0x110>
     c64:	4a c0       	rjmp	.+148    	; 0xcfa <main+0x1a4>
     c66:	84 34       	cpi	r24, 0x44	; 68
     c68:	09 f4       	brne	.+2      	; 0xc6c <main+0x116>
     c6a:	61 c0       	rjmp	.+194    	; 0xd2e <main+0x1d8>
     c6c:	8d c0       	rjmp	.+282    	; 0xd88 <main+0x232>
            case 'A':
              LCD_enviando();
     c6e:	0e 94 b3 04 	call	0x966	; 0x966 <LCD_enviando>
              memset(PTL_datos.buffer_envio, 0, sizeof(PTL_datos.buffer_envio));
     c72:	ee e2       	ldi	r30, 0x2E	; 46
     c74:	f4 e0       	ldi	r31, 0x04	; 4
     c76:	83 e2       	ldi	r24, 0x23	; 35
     c78:	df 01       	movw	r26, r30
     c7a:	1d 92       	st	X+, r1
     c7c:	8a 95       	dec	r24
     c7e:	e9 f7       	brne	.-6      	; 0xc7a <main+0x124>
              strcat(PTL_datos.buffer_envio,  "AT$A");
     c80:	df 01       	movw	r26, r30
     c82:	0d 90       	ld	r0, X+
     c84:	00 20       	and	r0, r0
     c86:	e9 f7       	brne	.-6      	; 0xc82 <main+0x12c>
     c88:	af 52       	subi	r26, 0x2F	; 47
     c8a:	b4 40       	sbci	r27, 0x04	; 4
     c8c:	a2 5d       	subi	r26, 0xD2	; 210
     c8e:	bb 4f       	sbci	r27, 0xFB	; 251
     c90:	85 e0       	ldi	r24, 0x05	; 5
     c92:	e8 ed       	ldi	r30, 0xD8	; 216
     c94:	f3 e0       	ldi	r31, 0x03	; 3
     c96:	01 90       	ld	r0, Z+
     c98:	0d 92       	st	X+, r0
     c9a:	8a 95       	dec	r24
     c9c:	e1 f7       	brne	.-8      	; 0xc96 <main+0x140>
              DATA_PTL_generarEnvio(PTL_datos);
     c9e:	8d b7       	in	r24, 0x3d	; 61
     ca0:	9e b7       	in	r25, 0x3e	; 62
     ca2:	8d 55       	subi	r24, 0x5D	; 93
     ca4:	91 09       	sbc	r25, r1
     ca6:	0f b6       	in	r0, 0x3f	; 63
     ca8:	f8 94       	cli
     caa:	9e bf       	out	0x3e, r25	; 62
     cac:	0f be       	out	0x3f, r0	; 63
     cae:	8d bf       	out	0x3d, r24	; 61
     cb0:	ad b7       	in	r26, 0x3d	; 61
     cb2:	be b7       	in	r27, 0x3e	; 62
     cb4:	11 96       	adiw	r26, 0x01	; 1
     cb6:	8d e5       	ldi	r24, 0x5D	; 93
     cb8:	ec e2       	ldi	r30, 0x2C	; 44
     cba:	f4 e0       	ldi	r31, 0x04	; 4
     cbc:	01 90       	ld	r0, Z+
     cbe:	0d 92       	st	X+, r0
     cc0:	8a 95       	dec	r24
     cc2:	e1 f7       	brne	.-8      	; 0xcbc <main+0x166>
     cc4:	0e 94 2e 05 	call	0xa5c	; 0xa5c <DATA_PTL_generarEnvio>
     cc8:	9f ef       	ldi	r25, 0xFF	; 255
     cca:	a7 ea       	ldi	r26, 0xA7	; 167
     ccc:	b1 e6       	ldi	r27, 0x61	; 97
     cce:	91 50       	subi	r25, 0x01	; 1
     cd0:	a0 40       	sbci	r26, 0x00	; 0
     cd2:	b0 40       	sbci	r27, 0x00	; 0
     cd4:	e1 f7       	brne	.-8      	; 0xcce <main+0x178>
     cd6:	00 c0       	rjmp	.+0      	; 0xcd8 <main+0x182>
     cd8:	00 00       	nop
              _delay_ms(2000);
              
              modo_espera = true;
     cda:	81 e0       	ldi	r24, 0x01	; 1
     cdc:	80 93 ee 03 	sts	0x03EE, r24	; 0x8003ee <__data_end>
              menu_estadoActual = manipulacion_espera;
     ce0:	88 e0       	ldi	r24, 0x08	; 8
     ce2:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
            break;
     ce6:	8d b7       	in	r24, 0x3d	; 61
     ce8:	9e b7       	in	r25, 0x3e	; 62
     cea:	83 5a       	subi	r24, 0xA3	; 163
     cec:	9f 4f       	sbci	r25, 0xFF	; 255
     cee:	0f b6       	in	r0, 0x3f	; 63
     cf0:	f8 94       	cli
     cf2:	9e bf       	out	0x3e, r25	; 62
     cf4:	0f be       	out	0x3f, r0	; 63
     cf6:	8d bf       	out	0x3d, r24	; 61
     cf8:	22 c2       	rjmp	.+1092   	; 0x113e <main+0x5e8>
            
            case 'B':
              LCD_stock();
     cfa:	0e 94 47 04 	call	0x88e	; 0x88e <LCD_stock>
     cfe:	9f ef       	ldi	r25, 0xFF	; 255
     d00:	a7 ea       	ldi	r26, 0xA7	; 167
     d02:	b1 e6       	ldi	r27, 0x61	; 97
     d04:	91 50       	subi	r25, 0x01	; 1
     d06:	a0 40       	sbci	r26, 0x00	; 0
     d08:	b0 40       	sbci	r27, 0x00	; 0
     d0a:	e1 f7       	brne	.-8      	; 0xd04 <main+0x1ae>
     d0c:	00 c0       	rjmp	.+0      	; 0xd0e <main+0x1b8>
     d0e:	00 00       	nop
     d10:	16 c2       	rjmp	.+1068   	; 0x113e <main+0x5e8>
              _delay_ms(2000);
            break;
            
            case 'C':
              LCD_vaciar();
     d12:	0e 94 d6 04 	call	0x9ac	; 0x9ac <LCD_vaciar>
              DATA_PTL_vaciarCeldas();
     d16:	0e 94 64 03 	call	0x6c8	; 0x6c8 <DATA_PTL_vaciarCeldas>
     d1a:	2f ef       	ldi	r18, 0xFF	; 255
     d1c:	87 ea       	ldi	r24, 0xA7	; 167
     d1e:	91 e6       	ldi	r25, 0x61	; 97
     d20:	21 50       	subi	r18, 0x01	; 1
     d22:	80 40       	sbci	r24, 0x00	; 0
     d24:	90 40       	sbci	r25, 0x00	; 0
     d26:	e1 f7       	brne	.-8      	; 0xd20 <main+0x1ca>
     d28:	00 c0       	rjmp	.+0      	; 0xd2a <main+0x1d4>
     d2a:	00 00       	nop
     d2c:	08 c2       	rjmp	.+1040   	; 0x113e <main+0x5e8>
              _delay_ms(2000);
            break;
            
            case 'D':
              menu_estadoActual = opc_agregar;
     d2e:	81 e0       	ldi	r24, 0x01	; 1
     d30:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
            break;
     d34:	04 c2       	rjmp	.+1032   	; 0x113e <main+0x5e8>
            
            case '<':
              decenasCargadas = false;
     d36:	10 92 ef 03 	sts	0x03EF, r1	; 0x8003ef <decenasCargadas>
              if (indiceCelda == 0)
     d3a:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <indiceCelda>
     d3e:	90 91 f2 03 	lds	r25, 0x03F2	; 0x8003f2 <indiceCelda+0x1>
     d42:	00 97       	sbiw	r24, 0x00	; 0
     d44:	39 f4       	brne	.+14     	; 0xd54 <main+0x1fe>
                indiceCelda = 8;
     d46:	88 e0       	ldi	r24, 0x08	; 8
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	90 93 f2 03 	sts	0x03F2, r25	; 0x8003f2 <indiceCelda+0x1>
     d4e:	80 93 f1 03 	sts	0x03F1, r24	; 0x8003f1 <indiceCelda>
     d52:	f5 c1       	rjmp	.+1002   	; 0x113e <main+0x5e8>
              else
                indiceCelda--;
     d54:	01 97       	sbiw	r24, 0x01	; 1
     d56:	90 93 f2 03 	sts	0x03F2, r25	; 0x8003f2 <indiceCelda+0x1>
     d5a:	80 93 f1 03 	sts	0x03F1, r24	; 0x8003f1 <indiceCelda>
     d5e:	ef c1       	rjmp	.+990    	; 0x113e <main+0x5e8>
            break;
            
            case '>':
              decenasCargadas = false;
     d60:	10 92 ef 03 	sts	0x03EF, r1	; 0x8003ef <decenasCargadas>
              if (indiceCelda == 8)
     d64:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <indiceCelda>
     d68:	90 91 f2 03 	lds	r25, 0x03F2	; 0x8003f2 <indiceCelda+0x1>
     d6c:	88 30       	cpi	r24, 0x08	; 8
     d6e:	91 05       	cpc	r25, r1
     d70:	29 f4       	brne	.+10     	; 0xd7c <main+0x226>
                indiceCelda = 0;
     d72:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <indiceCelda+0x1>
     d76:	10 92 f1 03 	sts	0x03F1, r1	; 0x8003f1 <indiceCelda>
     d7a:	e1 c1       	rjmp	.+962    	; 0x113e <main+0x5e8>
              else
                indiceCelda++;
     d7c:	01 96       	adiw	r24, 0x01	; 1
     d7e:	90 93 f2 03 	sts	0x03F2, r25	; 0x8003f2 <indiceCelda+0x1>
     d82:	80 93 f1 03 	sts	0x03F1, r24	; 0x8003f1 <indiceCelda>
     d86:	db c1       	rjmp	.+950    	; 0x113e <main+0x5e8>
            break;
            
            default:
              key_numero = key - 48; // Resta 48 porque los numeros en ASCII comienzan en el indice 48 [ASCII(48) = '0'].
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	c0 97       	sbiw	r24, 0x30	; 48
     d8c:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <key_numero+0x1>
     d90:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <key_numero>
              
              if (decenasCargadas){
     d94:	20 91 ef 03 	lds	r18, 0x03EF	; 0x8003ef <decenasCargadas>
     d98:	22 23       	and	r18, r18
     d9a:	d1 f0       	breq	.+52     	; 0xdd0 <main+0x27a>
                celdas[indiceCelda].valor += key_numero;
     d9c:	20 91 f1 03 	lds	r18, 0x03F1	; 0x8003f1 <indiceCelda>
     da0:	30 91 f2 03 	lds	r19, 0x03F2	; 0x8003f2 <indiceCelda+0x1>
     da4:	f9 01       	movw	r30, r18
     da6:	ee 0f       	add	r30, r30
     da8:	ff 1f       	adc	r31, r31
     daa:	e2 0f       	add	r30, r18
     dac:	f3 1f       	adc	r31, r19
     dae:	ee 0f       	add	r30, r30
     db0:	ff 1f       	adc	r31, r31
     db2:	eb 50       	subi	r30, 0x0B	; 11
     db4:	fc 4f       	sbci	r31, 0xFC	; 252
     db6:	40 81       	ld	r20, Z
     db8:	51 81       	ldd	r21, Z+1	; 0x01
     dba:	84 0f       	add	r24, r20
     dbc:	95 1f       	adc	r25, r21
     dbe:	91 83       	std	Z+1, r25	; 0x01
     dc0:	80 83       	st	Z, r24
                indiceCelda++; // Luego de cargar las unidades el indice de carga avanza.
     dc2:	2f 5f       	subi	r18, 0xFF	; 255
     dc4:	3f 4f       	sbci	r19, 0xFF	; 255
     dc6:	30 93 f2 03 	sts	0x03F2, r19	; 0x8003f2 <indiceCelda+0x1>
     dca:	20 93 f1 03 	sts	0x03F1, r18	; 0x8003f1 <indiceCelda>
     dce:	1a c0       	rjmp	.+52     	; 0xe04 <main+0x2ae>
              }else{
                celdas[indiceCelda].valor = 0; // Si se vuelve a cargar, se reestablece.
     dd0:	20 91 f1 03 	lds	r18, 0x03F1	; 0x8003f1 <indiceCelda>
     dd4:	30 91 f2 03 	lds	r19, 0x03F2	; 0x8003f2 <indiceCelda+0x1>
     dd8:	f9 01       	movw	r30, r18
     dda:	ee 0f       	add	r30, r30
     ddc:	ff 1f       	adc	r31, r31
                celdas[indiceCelda].valor += (10 * key_numero);
     dde:	ac 01       	movw	r20, r24
     de0:	44 0f       	add	r20, r20
     de2:	55 1f       	adc	r21, r21
     de4:	88 0f       	add	r24, r24
     de6:	99 1f       	adc	r25, r25
     de8:	88 0f       	add	r24, r24
     dea:	99 1f       	adc	r25, r25
     dec:	88 0f       	add	r24, r24
     dee:	99 1f       	adc	r25, r25
     df0:	84 0f       	add	r24, r20
     df2:	95 1f       	adc	r25, r21
     df4:	e2 0f       	add	r30, r18
     df6:	f3 1f       	adc	r31, r19
     df8:	ee 0f       	add	r30, r30
     dfa:	ff 1f       	adc	r31, r31
     dfc:	eb 50       	subi	r30, 0x0B	; 11
     dfe:	fc 4f       	sbci	r31, 0xFC	; 252
     e00:	91 83       	std	Z+1, r25	; 0x01
     e02:	80 83       	st	Z, r24
              }
              
              decenasCargadas = !decenasCargadas;
     e04:	90 91 ef 03 	lds	r25, 0x03EF	; 0x8003ef <decenasCargadas>
     e08:	81 e0       	ldi	r24, 0x01	; 1
     e0a:	89 27       	eor	r24, r25
     e0c:	80 93 ef 03 	sts	0x03EF, r24	; 0x8003ef <decenasCargadas>
            break;
     e10:	96 c1       	rjmp	.+812    	; 0x113e <main+0x5e8>
                  | < # >           Opcion de bth interno		     < # >   |
                  |  \ /                                            \ /    |
                  |--------------------------------------------------------|
          */
        case opc_bth_interno:
          switch (key){
     e12:	82 34       	cpi	r24, 0x42	; 66
     e14:	49 f0       	breq	.+18     	; 0xe28 <main+0x2d2>
     e16:	84 34       	cpi	r24, 0x44	; 68
     e18:	59 f0       	breq	.+22     	; 0xe30 <main+0x2da>
     e1a:	81 34       	cpi	r24, 0x41	; 65
     e1c:	09 f0       	breq	.+2      	; 0xe20 <main+0x2ca>
     e1e:	8f c1       	rjmp	.+798    	; 0x113e <main+0x5e8>
          case 'A':
            menu_estadoActual = opc_bth_vincular;
     e20:	86 e0       	ldi	r24, 0x06	; 6
     e22:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
            break;
     e26:	8b c1       	rjmp	.+790    	; 0x113e <main+0x5e8>
          case 'B':
            menu_estadoActual = opc_bth_modificar;
     e28:	87 e0       	ldi	r24, 0x07	; 7
     e2a:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
            break;
     e2e:	87 c1       	rjmp	.+782    	; 0x113e <main+0x5e8>
          case 'D':
            menu_estadoActual = opc_bth;
     e30:	10 92 f0 03 	sts	0x03F0, r1	; 0x8003f0 <menu_estadoActual>
            break;
     e34:	84 c1       	rjmp	.+776    	; 0x113e <main+0x5e8>
                  | < # >          Opcion de bth vincular          < # >   |
                  |  \ /                                            \ /    |
                  |--------------------------------------------------------|
          */
        case opc_bth_vincular:
          switch (key){
     e36:	83 33       	cpi	r24, 0x33	; 51
     e38:	09 f4       	brne	.+2      	; 0xe3c <main+0x2e6>
     e3a:	4a c0       	rjmp	.+148    	; 0xed0 <main+0x37a>
     e3c:	28 f4       	brcc	.+10     	; 0xe48 <main+0x2f2>
     e3e:	81 33       	cpi	r24, 0x31	; 49
     e40:	f9 f0       	breq	.+62     	; 0xe80 <main+0x32a>
     e42:	82 33       	cpi	r24, 0x32	; 50
     e44:	89 f1       	breq	.+98     	; 0xea8 <main+0x352>
     e46:	7b c1       	rjmp	.+758    	; 0x113e <main+0x5e8>
     e48:	82 34       	cpi	r24, 0x42	; 66
     e4a:	81 f0       	breq	.+32     	; 0xe6c <main+0x316>
     e4c:	84 34       	cpi	r24, 0x44	; 68
     e4e:	09 f4       	brne	.+2      	; 0xe52 <main+0x2fc>
     e50:	53 c0       	rjmp	.+166    	; 0xef8 <main+0x3a2>
     e52:	81 34       	cpi	r24, 0x41	; 65
     e54:	09 f0       	breq	.+2      	; 0xe58 <main+0x302>
     e56:	73 c1       	rjmp	.+742    	; 0x113e <main+0x5e8>
     e58:	af ef       	ldi	r26, 0xFF	; 255
     e5a:	b3 ec       	ldi	r27, 0xC3	; 195
     e5c:	29 e0       	ldi	r18, 0x09	; 9
     e5e:	a1 50       	subi	r26, 0x01	; 1
     e60:	b0 40       	sbci	r27, 0x00	; 0
     e62:	20 40       	sbci	r18, 0x00	; 0
     e64:	e1 f7       	brne	.-8      	; 0xe5e <main+0x308>
     e66:	00 c0       	rjmp	.+0      	; 0xe68 <main+0x312>
     e68:	00 00       	nop
     e6a:	69 c1       	rjmp	.+722    	; 0x113e <main+0x5e8>
     e6c:	8f ef       	ldi	r24, 0xFF	; 255
     e6e:	93 ec       	ldi	r25, 0xC3	; 195
     e70:	a9 e0       	ldi	r26, 0x09	; 9
     e72:	81 50       	subi	r24, 0x01	; 1
     e74:	90 40       	sbci	r25, 0x00	; 0
     e76:	a0 40       	sbci	r26, 0x00	; 0
     e78:	e1 f7       	brne	.-8      	; 0xe72 <main+0x31c>
     e7a:	00 c0       	rjmp	.+0      	; 0xe7c <main+0x326>
     e7c:	00 00       	nop
     e7e:	5f c1       	rjmp	.+702    	; 0x113e <main+0x5e8>
          case 'B':
            // LCD_vinculando();
            _delay_ms(200);
            break;
          case '1':
            LCD_clear();
     e80:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
            LCD_goto(1, 1);
     e84:	61 e0       	ldi	r22, 0x01	; 1
     e86:	81 e0       	ldi	r24, 0x01	; 1
     e88:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
            LCD_print("1: ");
     e8c:	8d ed       	ldi	r24, 0xDD	; 221
     e8e:	93 e0       	ldi	r25, 0x03	; 3
     e90:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     e94:	bf ef       	ldi	r27, 0xFF	; 255
     e96:	25 ea       	ldi	r18, 0xA5	; 165
     e98:	8e e0       	ldi	r24, 0x0E	; 14
     e9a:	b1 50       	subi	r27, 0x01	; 1
     e9c:	20 40       	sbci	r18, 0x00	; 0
     e9e:	80 40       	sbci	r24, 0x00	; 0
     ea0:	e1 f7       	brne	.-8      	; 0xe9a <main+0x344>
     ea2:	00 c0       	rjmp	.+0      	; 0xea4 <main+0x34e>
     ea4:	00 00       	nop
     ea6:	4b c1       	rjmp	.+662    	; 0x113e <main+0x5e8>
            // BTH_envia("H1");
            _delay_ms(300);
            break;
          case '2':
            LCD_clear();
     ea8:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
            LCD_goto(1, 1);
     eac:	61 e0       	ldi	r22, 0x01	; 1
     eae:	81 e0       	ldi	r24, 0x01	; 1
     eb0:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
            LCD_print("2: ");
     eb4:	81 ee       	ldi	r24, 0xE1	; 225
     eb6:	93 e0       	ldi	r25, 0x03	; 3
     eb8:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     ebc:	9f ef       	ldi	r25, 0xFF	; 255
     ebe:	a5 ea       	ldi	r26, 0xA5	; 165
     ec0:	be e0       	ldi	r27, 0x0E	; 14
     ec2:	91 50       	subi	r25, 0x01	; 1
     ec4:	a0 40       	sbci	r26, 0x00	; 0
     ec6:	b0 40       	sbci	r27, 0x00	; 0
     ec8:	e1 f7       	brne	.-8      	; 0xec2 <main+0x36c>
     eca:	00 c0       	rjmp	.+0      	; 0xecc <main+0x376>
     ecc:	00 00       	nop
     ece:	37 c1       	rjmp	.+622    	; 0x113e <main+0x5e8>
            // BTH_envia("H2");
            _delay_ms(300);
            break;
          case '3':
            LCD_clear();
     ed0:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_clear>
            LCD_goto(1, 1);
     ed4:	61 e0       	ldi	r22, 0x01	; 1
     ed6:	81 e0       	ldi	r24, 0x01	; 1
     ed8:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_goto>
            LCD_print("3: ");
     edc:	85 ee       	ldi	r24, 0xE5	; 229
     ede:	93 e0       	ldi	r25, 0x03	; 3
     ee0:	0e 94 05 01 	call	0x20a	; 0x20a <LCD_print>
     ee4:	2f ef       	ldi	r18, 0xFF	; 255
     ee6:	85 ea       	ldi	r24, 0xA5	; 165
     ee8:	9e e0       	ldi	r25, 0x0E	; 14
     eea:	21 50       	subi	r18, 0x01	; 1
     eec:	80 40       	sbci	r24, 0x00	; 0
     eee:	90 40       	sbci	r25, 0x00	; 0
     ef0:	e1 f7       	brne	.-8      	; 0xeea <main+0x394>
     ef2:	00 c0       	rjmp	.+0      	; 0xef4 <main+0x39e>
     ef4:	00 00       	nop
     ef6:	23 c1       	rjmp	.+582    	; 0x113e <main+0x5e8>
            // BTH_envia("H3");
            _delay_ms(300);
            break;
          case 'D':
            menu_estadoActual = opc_bth_interno;
     ef8:	85 e0       	ldi	r24, 0x05	; 5
     efa:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
            break;
     efe:	1f c1       	rjmp	.+574    	; 0x113e <main+0x5e8>
                  | < # >          Opcion de bth modificar         < # >   |
                  |  \ /                                            \ /    |
                  |--------------------------------------------------------|
          */
        case opc_bth_modificar:
          switch (key){
     f00:	82 34       	cpi	r24, 0x42	; 66
     f02:	79 f0       	breq	.+30     	; 0xf22 <main+0x3cc>
     f04:	84 34       	cpi	r24, 0x44	; 68
     f06:	b9 f0       	breq	.+46     	; 0xf36 <main+0x3e0>
     f08:	81 34       	cpi	r24, 0x41	; 65
     f0a:	09 f0       	breq	.+2      	; 0xf0e <main+0x3b8>
     f0c:	18 c1       	rjmp	.+560    	; 0x113e <main+0x5e8>
     f0e:	af ef       	ldi	r26, 0xFF	; 255
     f10:	b3 ec       	ldi	r27, 0xC3	; 195
     f12:	29 e0       	ldi	r18, 0x09	; 9
     f14:	a1 50       	subi	r26, 0x01	; 1
     f16:	b0 40       	sbci	r27, 0x00	; 0
     f18:	20 40       	sbci	r18, 0x00	; 0
     f1a:	e1 f7       	brne	.-8      	; 0xf14 <main+0x3be>
     f1c:	00 c0       	rjmp	.+0      	; 0xf1e <main+0x3c8>
     f1e:	00 00       	nop
     f20:	0e c1       	rjmp	.+540    	; 0x113e <main+0x5e8>
     f22:	8f ef       	ldi	r24, 0xFF	; 255
     f24:	93 ec       	ldi	r25, 0xC3	; 195
     f26:	a9 e0       	ldi	r26, 0x09	; 9
     f28:	81 50       	subi	r24, 0x01	; 1
     f2a:	90 40       	sbci	r25, 0x00	; 0
     f2c:	a0 40       	sbci	r26, 0x00	; 0
     f2e:	e1 f7       	brne	.-8      	; 0xf28 <main+0x3d2>
     f30:	00 c0       	rjmp	.+0      	; 0xf32 <main+0x3dc>
     f32:	00 00       	nop
     f34:	04 c1       	rjmp	.+520    	; 0x113e <main+0x5e8>
          case 'B':
            // LCD_modificar();
            _delay_ms(200);
            break;
          case 'D':
            menu_estadoActual = opc_bth_interno;
     f36:	85 e0       	ldi	r24, 0x05	; 5
     f38:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
            break;
     f3c:	00 c1       	rjmp	.+512    	; 0x113e <main+0x5e8>
                  | < # >     Opcion para quitar objetos del PTL   < # >   |
                  |  \ /                                            \ /    |
                  |--------------------------------------------------------|
          */
        case opc_quitar_interno:
          switch (key){
     f3e:	81 34       	cpi	r24, 0x41	; 65
     f40:	89 f0       	breq	.+34     	; 0xf64 <main+0x40e>
     f42:	38 f4       	brcc	.+14     	; 0xf52 <main+0x3fc>
     f44:	8c 33       	cpi	r24, 0x3C	; 60
     f46:	09 f4       	brne	.+2      	; 0xf4a <main+0x3f4>
     f48:	71 c0       	rjmp	.+226    	; 0x102c <main+0x4d6>
     f4a:	8e 33       	cpi	r24, 0x3E	; 62
     f4c:	09 f4       	brne	.+2      	; 0xf50 <main+0x3fa>
     f4e:	83 c0       	rjmp	.+262    	; 0x1056 <main+0x500>
     f50:	96 c0       	rjmp	.+300    	; 0x107e <main+0x528>
     f52:	83 34       	cpi	r24, 0x43	; 67
     f54:	09 f4       	brne	.+2      	; 0xf58 <main+0x402>
     f56:	58 c0       	rjmp	.+176    	; 0x1008 <main+0x4b2>
     f58:	08 f4       	brcc	.+2      	; 0xf5c <main+0x406>
     f5a:	4a c0       	rjmp	.+148    	; 0xff0 <main+0x49a>
     f5c:	84 34       	cpi	r24, 0x44	; 68
     f5e:	09 f4       	brne	.+2      	; 0xf62 <main+0x40c>
     f60:	61 c0       	rjmp	.+194    	; 0x1024 <main+0x4ce>
     f62:	8d c0       	rjmp	.+282    	; 0x107e <main+0x528>
          case 'A':
            LCD_enviando();
     f64:	0e 94 b3 04 	call	0x966	; 0x966 <LCD_enviando>
            memset(PTL_datos.buffer_envio, 0, sizeof(PTL_datos.buffer_envio));
     f68:	ee e2       	ldi	r30, 0x2E	; 46
     f6a:	f4 e0       	ldi	r31, 0x04	; 4
     f6c:	83 e2       	ldi	r24, 0x23	; 35
     f6e:	df 01       	movw	r26, r30
     f70:	1d 92       	st	X+, r1
     f72:	8a 95       	dec	r24
     f74:	e9 f7       	brne	.-6      	; 0xf70 <main+0x41a>
            strcat(PTL_datos.buffer_envio,  "AT$B");
     f76:	df 01       	movw	r26, r30
     f78:	0d 90       	ld	r0, X+
     f7a:	00 20       	and	r0, r0
     f7c:	e9 f7       	brne	.-6      	; 0xf78 <main+0x422>
     f7e:	af 52       	subi	r26, 0x2F	; 47
     f80:	b4 40       	sbci	r27, 0x04	; 4
     f82:	a2 5d       	subi	r26, 0xD2	; 210
     f84:	bb 4f       	sbci	r27, 0xFB	; 251
     f86:	85 e0       	ldi	r24, 0x05	; 5
     f88:	e9 ee       	ldi	r30, 0xE9	; 233
     f8a:	f3 e0       	ldi	r31, 0x03	; 3
     f8c:	01 90       	ld	r0, Z+
     f8e:	0d 92       	st	X+, r0
     f90:	8a 95       	dec	r24
     f92:	e1 f7       	brne	.-8      	; 0xf8c <main+0x436>
            DATA_PTL_generarEnvio(PTL_datos);
     f94:	8d b7       	in	r24, 0x3d	; 61
     f96:	9e b7       	in	r25, 0x3e	; 62
     f98:	8d 55       	subi	r24, 0x5D	; 93
     f9a:	91 09       	sbc	r25, r1
     f9c:	0f b6       	in	r0, 0x3f	; 63
     f9e:	f8 94       	cli
     fa0:	9e bf       	out	0x3e, r25	; 62
     fa2:	0f be       	out	0x3f, r0	; 63
     fa4:	8d bf       	out	0x3d, r24	; 61
     fa6:	ad b7       	in	r26, 0x3d	; 61
     fa8:	be b7       	in	r27, 0x3e	; 62
     faa:	11 96       	adiw	r26, 0x01	; 1
     fac:	8d e5       	ldi	r24, 0x5D	; 93
     fae:	ec e2       	ldi	r30, 0x2C	; 44
     fb0:	f4 e0       	ldi	r31, 0x04	; 4
     fb2:	01 90       	ld	r0, Z+
     fb4:	0d 92       	st	X+, r0
     fb6:	8a 95       	dec	r24
     fb8:	e1 f7       	brne	.-8      	; 0xfb2 <main+0x45c>
     fba:	0e 94 2e 05 	call	0xa5c	; 0xa5c <DATA_PTL_generarEnvio>
     fbe:	9f ef       	ldi	r25, 0xFF	; 255
     fc0:	a7 ea       	ldi	r26, 0xA7	; 167
     fc2:	b1 e6       	ldi	r27, 0x61	; 97
     fc4:	91 50       	subi	r25, 0x01	; 1
     fc6:	a0 40       	sbci	r26, 0x00	; 0
     fc8:	b0 40       	sbci	r27, 0x00	; 0
     fca:	e1 f7       	brne	.-8      	; 0xfc4 <main+0x46e>
     fcc:	00 c0       	rjmp	.+0      	; 0xfce <main+0x478>
     fce:	00 00       	nop
            _delay_ms(2000);
            
            modo_espera = true;
     fd0:	81 e0       	ldi	r24, 0x01	; 1
     fd2:	80 93 ee 03 	sts	0x03EE, r24	; 0x8003ee <__data_end>
            menu_estadoActual = manipulacion_espera;
     fd6:	88 e0       	ldi	r24, 0x08	; 8
     fd8:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
          break;
     fdc:	8d b7       	in	r24, 0x3d	; 61
     fde:	9e b7       	in	r25, 0x3e	; 62
     fe0:	83 5a       	subi	r24, 0xA3	; 163
     fe2:	9f 4f       	sbci	r25, 0xFF	; 255
     fe4:	0f b6       	in	r0, 0x3f	; 63
     fe6:	f8 94       	cli
     fe8:	9e bf       	out	0x3e, r25	; 62
     fea:	0f be       	out	0x3f, r0	; 63
     fec:	8d bf       	out	0x3d, r24	; 61
     fee:	a7 c0       	rjmp	.+334    	; 0x113e <main+0x5e8>
          case 'B': // VER STOCK
            LCD_stock(); // MUESTRA STOCK ALMACENADO
     ff0:	0e 94 47 04 	call	0x88e	; 0x88e <LCD_stock>
     ff4:	9f ef       	ldi	r25, 0xFF	; 255
     ff6:	a7 ea       	ldi	r26, 0xA7	; 167
     ff8:	b1 e6       	ldi	r27, 0x61	; 97
     ffa:	91 50       	subi	r25, 0x01	; 1
     ffc:	a0 40       	sbci	r26, 0x00	; 0
     ffe:	b0 40       	sbci	r27, 0x00	; 0
    1000:	e1 f7       	brne	.-8      	; 0xffa <main+0x4a4>
    1002:	00 c0       	rjmp	.+0      	; 0x1004 <main+0x4ae>
    1004:	00 00       	nop
    1006:	9b c0       	rjmp	.+310    	; 0x113e <main+0x5e8>
            _delay_ms(2000);
          break;
          case 'C': // VACIA CELDAS
            LCD_vaciar();
    1008:	0e 94 d6 04 	call	0x9ac	; 0x9ac <LCD_vaciar>
            DATA_PTL_vaciarCeldas();
    100c:	0e 94 64 03 	call	0x6c8	; 0x6c8 <DATA_PTL_vaciarCeldas>
    1010:	2f ef       	ldi	r18, 0xFF	; 255
    1012:	87 ea       	ldi	r24, 0xA7	; 167
    1014:	91 e6       	ldi	r25, 0x61	; 97
    1016:	21 50       	subi	r18, 0x01	; 1
    1018:	80 40       	sbci	r24, 0x00	; 0
    101a:	90 40       	sbci	r25, 0x00	; 0
    101c:	e1 f7       	brne	.-8      	; 0x1016 <main+0x4c0>
    101e:	00 c0       	rjmp	.+0      	; 0x1020 <main+0x4ca>
    1020:	00 00       	nop
    1022:	8d c0       	rjmp	.+282    	; 0x113e <main+0x5e8>
            _delay_ms(2000);
          break;
          case 'D': // SALIR
            menu_estadoActual = opc_quitar;
    1024:	82 e0       	ldi	r24, 0x02	; 2
    1026:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <menu_estadoActual>
          break;
    102a:	89 c0       	rjmp	.+274    	; 0x113e <main+0x5e8>
          case '<':
            decenasCargadas = false;
    102c:	10 92 ef 03 	sts	0x03EF, r1	; 0x8003ef <decenasCargadas>
            if (indiceCelda == 0)
    1030:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <indiceCelda>
    1034:	90 91 f2 03 	lds	r25, 0x03F2	; 0x8003f2 <indiceCelda+0x1>
    1038:	00 97       	sbiw	r24, 0x00	; 0
    103a:	39 f4       	brne	.+14     	; 0x104a <main+0x4f4>
              indiceCelda = 8;
    103c:	88 e0       	ldi	r24, 0x08	; 8
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	90 93 f2 03 	sts	0x03F2, r25	; 0x8003f2 <indiceCelda+0x1>
    1044:	80 93 f1 03 	sts	0x03F1, r24	; 0x8003f1 <indiceCelda>
    1048:	7a c0       	rjmp	.+244    	; 0x113e <main+0x5e8>
            else
              indiceCelda--;
    104a:	01 97       	sbiw	r24, 0x01	; 1
    104c:	90 93 f2 03 	sts	0x03F2, r25	; 0x8003f2 <indiceCelda+0x1>
    1050:	80 93 f1 03 	sts	0x03F1, r24	; 0x8003f1 <indiceCelda>
    1054:	74 c0       	rjmp	.+232    	; 0x113e <main+0x5e8>
          break;
          case '>':
            decenasCargadas = false;
    1056:	10 92 ef 03 	sts	0x03EF, r1	; 0x8003ef <decenasCargadas>
            if (indiceCelda == 8)
    105a:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <indiceCelda>
    105e:	90 91 f2 03 	lds	r25, 0x03F2	; 0x8003f2 <indiceCelda+0x1>
    1062:	88 30       	cpi	r24, 0x08	; 8
    1064:	91 05       	cpc	r25, r1
    1066:	29 f4       	brne	.+10     	; 0x1072 <main+0x51c>
              indiceCelda = 0;
    1068:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <indiceCelda+0x1>
    106c:	10 92 f1 03 	sts	0x03F1, r1	; 0x8003f1 <indiceCelda>
    1070:	66 c0       	rjmp	.+204    	; 0x113e <main+0x5e8>
            else
              indiceCelda++;
    1072:	01 96       	adiw	r24, 0x01	; 1
    1074:	90 93 f2 03 	sts	0x03F2, r25	; 0x8003f2 <indiceCelda+0x1>
    1078:	80 93 f1 03 	sts	0x03F1, r24	; 0x8003f1 <indiceCelda>
    107c:	60 c0       	rjmp	.+192    	; 0x113e <main+0x5e8>
          break;
          
          default:
            key_numero = key - 48; // Se sustrae 48, porque los n�meros representados en ASCII comienzan en el caracter 48 [ASCII(48) = '0'].
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	c0 97       	sbiw	r24, 0x30	; 48
    1082:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <key_numero+0x1>
    1086:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <key_numero>
            
            if (decenasCargadas){
    108a:	20 91 ef 03 	lds	r18, 0x03EF	; 0x8003ef <decenasCargadas>
    108e:	22 23       	and	r18, r18
    1090:	d1 f0       	breq	.+52     	; 0x10c6 <main+0x570>
              celdas[indiceCelda].valor += key_numero;
    1092:	20 91 f1 03 	lds	r18, 0x03F1	; 0x8003f1 <indiceCelda>
    1096:	30 91 f2 03 	lds	r19, 0x03F2	; 0x8003f2 <indiceCelda+0x1>
    109a:	f9 01       	movw	r30, r18
    109c:	ee 0f       	add	r30, r30
    109e:	ff 1f       	adc	r31, r31
    10a0:	e2 0f       	add	r30, r18
    10a2:	f3 1f       	adc	r31, r19
    10a4:	ee 0f       	add	r30, r30
    10a6:	ff 1f       	adc	r31, r31
    10a8:	eb 50       	subi	r30, 0x0B	; 11
    10aa:	fc 4f       	sbci	r31, 0xFC	; 252
    10ac:	40 81       	ld	r20, Z
    10ae:	51 81       	ldd	r21, Z+1	; 0x01
    10b0:	84 0f       	add	r24, r20
    10b2:	95 1f       	adc	r25, r21
    10b4:	91 83       	std	Z+1, r25	; 0x01
    10b6:	80 83       	st	Z, r24
              indiceCelda++; // Luego de cargar las unidades el �ndice de carga avanza.
    10b8:	2f 5f       	subi	r18, 0xFF	; 255
    10ba:	3f 4f       	sbci	r19, 0xFF	; 255
    10bc:	30 93 f2 03 	sts	0x03F2, r19	; 0x8003f2 <indiceCelda+0x1>
    10c0:	20 93 f1 03 	sts	0x03F1, r18	; 0x8003f1 <indiceCelda>
    10c4:	1a c0       	rjmp	.+52     	; 0x10fa <main+0x5a4>
            } else{
              celdas[indiceCelda].valor = 0; // Si se vuelve a cargar, se reestablece.
    10c6:	20 91 f1 03 	lds	r18, 0x03F1	; 0x8003f1 <indiceCelda>
    10ca:	30 91 f2 03 	lds	r19, 0x03F2	; 0x8003f2 <indiceCelda+0x1>
    10ce:	f9 01       	movw	r30, r18
    10d0:	ee 0f       	add	r30, r30
    10d2:	ff 1f       	adc	r31, r31
              celdas[indiceCelda].valor += (10 * key_numero);
    10d4:	ac 01       	movw	r20, r24
    10d6:	44 0f       	add	r20, r20
    10d8:	55 1f       	adc	r21, r21
    10da:	88 0f       	add	r24, r24
    10dc:	99 1f       	adc	r25, r25
    10de:	88 0f       	add	r24, r24
    10e0:	99 1f       	adc	r25, r25
    10e2:	88 0f       	add	r24, r24
    10e4:	99 1f       	adc	r25, r25
    10e6:	84 0f       	add	r24, r20
    10e8:	95 1f       	adc	r25, r21
    10ea:	e2 0f       	add	r30, r18
    10ec:	f3 1f       	adc	r31, r19
    10ee:	ee 0f       	add	r30, r30
    10f0:	ff 1f       	adc	r31, r31
    10f2:	eb 50       	subi	r30, 0x0B	; 11
    10f4:	fc 4f       	sbci	r31, 0xFC	; 252
    10f6:	91 83       	std	Z+1, r25	; 0x01
    10f8:	80 83       	st	Z, r24
            }
            
            decenasCargadas = !decenasCargadas;
    10fa:	90 91 ef 03 	lds	r25, 0x03EF	; 0x8003ef <decenasCargadas>
    10fe:	81 e0       	ldi	r24, 0x01	; 1
    1100:	89 27       	eor	r24, r25
    1102:	80 93 ef 03 	sts	0x03EF, r24	; 0x8003ef <decenasCargadas>
            break;
    1106:	1b c0       	rjmp	.+54     	; 0x113e <main+0x5e8>
                  |--------------------------------------------------------|
          */
        
        case manipulacion_espera:
          
          switch(key){  
    1108:	81 33       	cpi	r24, 0x31	; 49
    110a:	19 f0       	breq	.+6      	; 0x1112 <main+0x5bc>
    110c:	89 33       	cpi	r24, 0x39	; 57
    110e:	89 f0       	breq	.+34     	; 0x1132 <main+0x5dc>
    1110:	16 c0       	rjmp	.+44     	; 0x113e <main+0x5e8>
            case '1':
              BTH_envia("AT\0");
    1112:	8a e2       	ldi	r24, 0x2A	; 42
    1114:	91 e0       	ldi	r25, 0x01	; 1
    1116:	0e 94 1b 05 	call	0xa36	; 0xa36 <BTH_envia>
    111a:	af ef       	ldi	r26, 0xFF	; 255
    111c:	b7 ea       	ldi	r27, 0xA7	; 167
    111e:	21 e6       	ldi	r18, 0x61	; 97
    1120:	a1 50       	subi	r26, 0x01	; 1
    1122:	b0 40       	sbci	r27, 0x00	; 0
    1124:	20 40       	sbci	r18, 0x00	; 0
    1126:	e1 f7       	brne	.-8      	; 0x1120 <main+0x5ca>
    1128:	00 c0       	rjmp	.+0      	; 0x112a <main+0x5d4>
    112a:	00 00       	nop
              _delay_ms(2000);
              BTH_recibe();
    112c:	0e 94 87 05 	call	0xb0e	; 0xb0e <BTH_recibe>
            break;
    1130:	06 c0       	rjmp	.+12     	; 0x113e <main+0x5e8>
            case '9':
              PTL_datos.buffer_envio[0] = 'O';
    1132:	ec e2       	ldi	r30, 0x2C	; 44
    1134:	f4 e0       	ldi	r31, 0x04	; 4
    1136:	8f e4       	ldi	r24, 0x4F	; 79
    1138:	82 83       	std	Z+2, r24	; 0x02
              PTL_datos.buffer_envio[1] = 'K';
    113a:	8b e4       	ldi	r24, 0x4B	; 75
    113c:	83 83       	std	Z+3, r24	; 0x03
    113e:	8f ef       	ldi	r24, 0xFF	; 255
    1140:	92 e5       	ldi	r25, 0x52	; 82
    1142:	a7 e0       	ldi	r26, 0x07	; 7
    1144:	81 50       	subi	r24, 0x01	; 1
    1146:	90 40       	sbci	r25, 0x00	; 0
    1148:	a0 40       	sbci	r26, 0x00	; 0
    114a:	e1 f7       	brne	.-8      	; 0x1144 <main+0x5ee>
    114c:	00 c0       	rjmp	.+0      	; 0x114e <main+0x5f8>
    114e:	00 00       	nop
        break;
      }
      
			// Muestra en pantalla luego de presionar el pad
			_delay_ms(150);
			LCD_menu[menu_estadoActual]();
    1150:	e0 91 f0 03 	lds	r30, 0x03F0	; 0x8003f0 <menu_estadoActual>
    1154:	f0 e0       	ldi	r31, 0x00	; 0
    1156:	ee 0f       	add	r30, r30
    1158:	ff 1f       	adc	r31, r31
    115a:	e0 50       	subi	r30, 0x00	; 0
    115c:	ff 4f       	sbci	r31, 0xFF	; 255
    115e:	01 90       	ld	r0, Z+
    1160:	f0 81       	ld	r31, Z
    1162:	e0 2d       	mov	r30, r0
    1164:	09 95       	icall
		}
    
    if (modo_espera && (PTL_datos.buffer_envio[0] == 'O' && PTL_datos.buffer_envio[1] == 'K')){
    1166:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <__data_end>
    116a:	88 23       	and	r24, r24
    116c:	09 f4       	brne	.+2      	; 0x1170 <main+0x61a>
    116e:	2f cd       	rjmp	.-1442   	; 0xbce <main+0x78>
    1170:	80 91 2e 04 	lds	r24, 0x042E	; 0x80042e <PTL_datos+0x2>
    1174:	8f 34       	cpi	r24, 0x4F	; 79
    1176:	09 f0       	breq	.+2      	; 0x117a <main+0x624>
    1178:	2a cd       	rjmp	.-1452   	; 0xbce <main+0x78>
    117a:	80 91 2f 04 	lds	r24, 0x042F	; 0x80042f <PTL_datos+0x3>
    117e:	8b 34       	cpi	r24, 0x4B	; 75
    1180:	09 f0       	breq	.+2      	; 0x1184 <main+0x62e>
    1182:	25 cd       	rjmp	.-1462   	; 0xbce <main+0x78>
        // MUESTRA MENSAJE DE ENVIO EXITOSO
        LCD_envio_ok();    
    1184:	0e 94 56 02 	call	0x4ac	; 0x4ac <LCD_envio_ok>
        
        // RECIBIR Y PROCESAR NUEVO STOCK
        BTH_envia("AT$C\0");
    1188:	84 e2       	ldi	r24, 0x24	; 36
    118a:	91 e0       	ldi	r25, 0x01	; 1
    118c:	0e 94 1b 05 	call	0xa36	; 0xa36 <BTH_envia>
    1190:	bf ef       	ldi	r27, 0xFF	; 255
    1192:	27 ea       	ldi	r18, 0xA7	; 167
    1194:	81 e6       	ldi	r24, 0x61	; 97
    1196:	b1 50       	subi	r27, 0x01	; 1
    1198:	20 40       	sbci	r18, 0x00	; 0
    119a:	80 40       	sbci	r24, 0x00	; 0
    119c:	e1 f7       	brne	.-8      	; 0x1196 <main+0x640>
    119e:	00 c0       	rjmp	.+0      	; 0x11a0 <main+0x64a>
    11a0:	00 00       	nop
        _delay_ms(2000); 
        BTH_recibe();
    11a2:	0e 94 87 05 	call	0xb0e	; 0xb0e <BTH_recibe>
        DATA_PTL_cargarStock();
    11a6:	0e 94 26 03 	call	0x64c	; 0x64c <DATA_PTL_cargarStock>
        
        // Se limpia el buffer de envio y vuelve a 0 el indice. 
        memset(PTL_datos.buffer_envio, 0, sizeof(PTL_datos.buffer_envio));
    11aa:	83 e2       	ldi	r24, 0x23	; 35
    11ac:	ee e2       	ldi	r30, 0x2E	; 46
    11ae:	f4 e0       	ldi	r31, 0x04	; 4
    11b0:	df 01       	movw	r26, r30
    11b2:	1d 92       	st	X+, r1
    11b4:	8a 95       	dec	r24
    11b6:	e9 f7       	brne	.-6      	; 0x11b2 <main+0x65c>
        DATA_PTL_vaciarCeldas();
    11b8:	0e 94 64 03 	call	0x6c8	; 0x6c8 <DATA_PTL_vaciarCeldas>
        indiceCelda = 0;
    11bc:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <indiceCelda+0x1>
    11c0:	10 92 f1 03 	sts	0x03F1, r1	; 0x8003f1 <indiceCelda>
        
        // Vuelve al estado opc_bth para mostrar el menu principal.
        menu_estadoActual = opc_bth;
    11c4:	10 92 f0 03 	sts	0x03F0, r1	; 0x8003f0 <menu_estadoActual>
        LCD_bth();
    11c8:	0e 94 84 01 	call	0x308	; 0x308 <LCD_bth>
        modo_espera = false;
    11cc:	10 92 ee 03 	sts	0x03EE, r1	; 0x8003ee <__data_end>
    11d0:	fe cc       	rjmp	.-1540   	; 0xbce <main+0x78>

000011d2 <__divmodhi4>:
    11d2:	97 fb       	bst	r25, 7
    11d4:	07 2e       	mov	r0, r23
    11d6:	16 f4       	brtc	.+4      	; 0x11dc <__divmodhi4+0xa>
    11d8:	00 94       	com	r0
    11da:	07 d0       	rcall	.+14     	; 0x11ea <__divmodhi4_neg1>
    11dc:	77 fd       	sbrc	r23, 7
    11de:	09 d0       	rcall	.+18     	; 0x11f2 <__divmodhi4_neg2>
    11e0:	0e 94 03 09 	call	0x1206	; 0x1206 <__udivmodhi4>
    11e4:	07 fc       	sbrc	r0, 7
    11e6:	05 d0       	rcall	.+10     	; 0x11f2 <__divmodhi4_neg2>
    11e8:	3e f4       	brtc	.+14     	; 0x11f8 <__divmodhi4_exit>

000011ea <__divmodhi4_neg1>:
    11ea:	90 95       	com	r25
    11ec:	81 95       	neg	r24
    11ee:	9f 4f       	sbci	r25, 0xFF	; 255
    11f0:	08 95       	ret

000011f2 <__divmodhi4_neg2>:
    11f2:	70 95       	com	r23
    11f4:	61 95       	neg	r22
    11f6:	7f 4f       	sbci	r23, 0xFF	; 255

000011f8 <__divmodhi4_exit>:
    11f8:	08 95       	ret

000011fa <__tablejump2__>:
    11fa:	ee 0f       	add	r30, r30
    11fc:	ff 1f       	adc	r31, r31
    11fe:	05 90       	lpm	r0, Z+
    1200:	f4 91       	lpm	r31, Z
    1202:	e0 2d       	mov	r30, r0
    1204:	09 94       	ijmp

00001206 <__udivmodhi4>:
    1206:	aa 1b       	sub	r26, r26
    1208:	bb 1b       	sub	r27, r27
    120a:	51 e1       	ldi	r21, 0x11	; 17
    120c:	07 c0       	rjmp	.+14     	; 0x121c <__udivmodhi4_ep>

0000120e <__udivmodhi4_loop>:
    120e:	aa 1f       	adc	r26, r26
    1210:	bb 1f       	adc	r27, r27
    1212:	a6 17       	cp	r26, r22
    1214:	b7 07       	cpc	r27, r23
    1216:	10 f0       	brcs	.+4      	; 0x121c <__udivmodhi4_ep>
    1218:	a6 1b       	sub	r26, r22
    121a:	b7 0b       	sbc	r27, r23

0000121c <__udivmodhi4_ep>:
    121c:	88 1f       	adc	r24, r24
    121e:	99 1f       	adc	r25, r25
    1220:	5a 95       	dec	r21
    1222:	a9 f7       	brne	.-22     	; 0x120e <__udivmodhi4_loop>
    1224:	80 95       	com	r24
    1226:	90 95       	com	r25
    1228:	bc 01       	movw	r22, r24
    122a:	cd 01       	movw	r24, r26
    122c:	08 95       	ret

0000122e <strtol>:
    122e:	a0 e0       	ldi	r26, 0x00	; 0
    1230:	b0 e0       	ldi	r27, 0x00	; 0
    1232:	ed e1       	ldi	r30, 0x1D	; 29
    1234:	f9 e0       	ldi	r31, 0x09	; 9
    1236:	0c 94 35 0d 	jmp	0x1a6a	; 0x1a6a <__prologue_saves__+0x2>
    123a:	5c 01       	movw	r10, r24
    123c:	6b 01       	movw	r12, r22
    123e:	7a 01       	movw	r14, r20
    1240:	61 15       	cp	r22, r1
    1242:	71 05       	cpc	r23, r1
    1244:	19 f0       	breq	.+6      	; 0x124c <strtol+0x1e>
    1246:	fb 01       	movw	r30, r22
    1248:	91 83       	std	Z+1, r25	; 0x01
    124a:	80 83       	st	Z, r24
    124c:	e1 14       	cp	r14, r1
    124e:	f1 04       	cpc	r15, r1
    1250:	29 f0       	breq	.+10     	; 0x125c <strtol+0x2e>
    1252:	c7 01       	movw	r24, r14
    1254:	02 97       	sbiw	r24, 0x02	; 2
    1256:	83 97       	sbiw	r24, 0x23	; 35
    1258:	08 f0       	brcs	.+2      	; 0x125c <strtol+0x2e>
    125a:	e5 c0       	rjmp	.+458    	; 0x1426 <strtol+0x1f8>
    125c:	e5 01       	movw	r28, r10
    125e:	21 96       	adiw	r28, 0x01	; 1
    1260:	f5 01       	movw	r30, r10
    1262:	10 81       	ld	r17, Z
    1264:	81 2f       	mov	r24, r17
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	0e 94 2d 0a 	call	0x145a	; 0x145a <isspace>
    126c:	89 2b       	or	r24, r25
    126e:	11 f0       	breq	.+4      	; 0x1274 <strtol+0x46>
    1270:	5e 01       	movw	r10, r28
    1272:	f4 cf       	rjmp	.-24     	; 0x125c <strtol+0x2e>
    1274:	1d 32       	cpi	r17, 0x2D	; 45
    1276:	29 f4       	brne	.+10     	; 0x1282 <strtol+0x54>
    1278:	21 96       	adiw	r28, 0x01	; 1
    127a:	f5 01       	movw	r30, r10
    127c:	11 81       	ldd	r17, Z+1	; 0x01
    127e:	01 e0       	ldi	r16, 0x01	; 1
    1280:	07 c0       	rjmp	.+14     	; 0x1290 <strtol+0x62>
    1282:	1b 32       	cpi	r17, 0x2B	; 43
    1284:	21 f4       	brne	.+8      	; 0x128e <strtol+0x60>
    1286:	e5 01       	movw	r28, r10
    1288:	22 96       	adiw	r28, 0x02	; 2
    128a:	f5 01       	movw	r30, r10
    128c:	11 81       	ldd	r17, Z+1	; 0x01
    128e:	00 e0       	ldi	r16, 0x00	; 0
    1290:	e1 14       	cp	r14, r1
    1292:	f1 04       	cpc	r15, r1
    1294:	09 f1       	breq	.+66     	; 0x12d8 <strtol+0xaa>
    1296:	f0 e1       	ldi	r31, 0x10	; 16
    1298:	ef 16       	cp	r14, r31
    129a:	f1 04       	cpc	r15, r1
    129c:	29 f4       	brne	.+10     	; 0x12a8 <strtol+0x7a>
    129e:	3f c0       	rjmp	.+126    	; 0x131e <strtol+0xf0>
    12a0:	10 e3       	ldi	r17, 0x30	; 48
    12a2:	e1 14       	cp	r14, r1
    12a4:	f1 04       	cpc	r15, r1
    12a6:	21 f1       	breq	.+72     	; 0x12f0 <strtol+0xc2>
    12a8:	28 e0       	ldi	r18, 0x08	; 8
    12aa:	e2 16       	cp	r14, r18
    12ac:	f1 04       	cpc	r15, r1
    12ae:	01 f1       	breq	.+64     	; 0x12f0 <strtol+0xc2>
    12b0:	54 f4       	brge	.+20     	; 0x12c6 <strtol+0x98>
    12b2:	e2 e0       	ldi	r30, 0x02	; 2
    12b4:	ee 16       	cp	r14, r30
    12b6:	f1 04       	cpc	r15, r1
    12b8:	21 f5       	brne	.+72     	; 0x1302 <strtol+0xd4>
    12ba:	81 2c       	mov	r8, r1
    12bc:	91 2c       	mov	r9, r1
    12be:	a1 2c       	mov	r10, r1
    12c0:	b0 e4       	ldi	r27, 0x40	; 64
    12c2:	bb 2e       	mov	r11, r27
    12c4:	3e c0       	rjmp	.+124    	; 0x1342 <strtol+0x114>
    12c6:	fa e0       	ldi	r31, 0x0A	; 10
    12c8:	ef 16       	cp	r14, r31
    12ca:	f1 04       	cpc	r15, r1
    12cc:	39 f0       	breq	.+14     	; 0x12dc <strtol+0xae>
    12ce:	20 e1       	ldi	r18, 0x10	; 16
    12d0:	e2 16       	cp	r14, r18
    12d2:	f1 04       	cpc	r15, r1
    12d4:	b1 f4       	brne	.+44     	; 0x1302 <strtol+0xd4>
    12d6:	30 c0       	rjmp	.+96     	; 0x1338 <strtol+0x10a>
    12d8:	10 33       	cpi	r17, 0x30	; 48
    12da:	19 f1       	breq	.+70     	; 0x1322 <strtol+0xf4>
    12dc:	fa e0       	ldi	r31, 0x0A	; 10
    12de:	ef 2e       	mov	r14, r31
    12e0:	f1 2c       	mov	r15, r1
    12e2:	ac ec       	ldi	r26, 0xCC	; 204
    12e4:	8a 2e       	mov	r8, r26
    12e6:	98 2c       	mov	r9, r8
    12e8:	a8 2c       	mov	r10, r8
    12ea:	ac e0       	ldi	r26, 0x0C	; 12
    12ec:	ba 2e       	mov	r11, r26
    12ee:	29 c0       	rjmp	.+82     	; 0x1342 <strtol+0x114>
    12f0:	78 e0       	ldi	r23, 0x08	; 8
    12f2:	e7 2e       	mov	r14, r23
    12f4:	f1 2c       	mov	r15, r1
    12f6:	81 2c       	mov	r8, r1
    12f8:	91 2c       	mov	r9, r1
    12fa:	a1 2c       	mov	r10, r1
    12fc:	e0 e1       	ldi	r30, 0x10	; 16
    12fe:	be 2e       	mov	r11, r30
    1300:	20 c0       	rjmp	.+64     	; 0x1342 <strtol+0x114>
    1302:	60 e0       	ldi	r22, 0x00	; 0
    1304:	70 e0       	ldi	r23, 0x00	; 0
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	90 e8       	ldi	r25, 0x80	; 128
    130a:	97 01       	movw	r18, r14
    130c:	0f 2c       	mov	r0, r15
    130e:	00 0c       	add	r0, r0
    1310:	44 0b       	sbc	r20, r20
    1312:	55 0b       	sbc	r21, r21
    1314:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <__udivmodsi4>
    1318:	49 01       	movw	r8, r18
    131a:	5a 01       	movw	r10, r20
    131c:	12 c0       	rjmp	.+36     	; 0x1342 <strtol+0x114>
    131e:	10 33       	cpi	r17, 0x30	; 48
    1320:	59 f4       	brne	.+22     	; 0x1338 <strtol+0x10a>
    1322:	88 81       	ld	r24, Y
    1324:	8f 7d       	andi	r24, 0xDF	; 223
    1326:	88 35       	cpi	r24, 0x58	; 88
    1328:	09 f0       	breq	.+2      	; 0x132c <strtol+0xfe>
    132a:	ba cf       	rjmp	.-140    	; 0x12a0 <strtol+0x72>
    132c:	19 81       	ldd	r17, Y+1	; 0x01
    132e:	22 96       	adiw	r28, 0x02	; 2
    1330:	02 60       	ori	r16, 0x02	; 2
    1332:	80 e1       	ldi	r24, 0x10	; 16
    1334:	e8 2e       	mov	r14, r24
    1336:	f1 2c       	mov	r15, r1
    1338:	81 2c       	mov	r8, r1
    133a:	91 2c       	mov	r9, r1
    133c:	a1 2c       	mov	r10, r1
    133e:	68 e0       	ldi	r22, 0x08	; 8
    1340:	b6 2e       	mov	r11, r22
    1342:	40 e0       	ldi	r20, 0x00	; 0
    1344:	60 e0       	ldi	r22, 0x00	; 0
    1346:	70 e0       	ldi	r23, 0x00	; 0
    1348:	cb 01       	movw	r24, r22
    134a:	27 01       	movw	r4, r14
    134c:	0f 2c       	mov	r0, r15
    134e:	00 0c       	add	r0, r0
    1350:	66 08       	sbc	r6, r6
    1352:	77 08       	sbc	r7, r7
    1354:	fe 01       	movw	r30, r28
    1356:	50 ed       	ldi	r21, 0xD0	; 208
    1358:	35 2e       	mov	r3, r21
    135a:	31 0e       	add	r3, r17
    135c:	29 e0       	ldi	r18, 0x09	; 9
    135e:	23 15       	cp	r18, r3
    1360:	70 f4       	brcc	.+28     	; 0x137e <strtol+0x150>
    1362:	2f eb       	ldi	r18, 0xBF	; 191
    1364:	21 0f       	add	r18, r17
    1366:	2a 31       	cpi	r18, 0x1A	; 26
    1368:	18 f4       	brcc	.+6      	; 0x1370 <strtol+0x142>
    136a:	39 ec       	ldi	r19, 0xC9	; 201
    136c:	33 2e       	mov	r3, r19
    136e:	06 c0       	rjmp	.+12     	; 0x137c <strtol+0x14e>
    1370:	2f e9       	ldi	r18, 0x9F	; 159
    1372:	21 0f       	add	r18, r17
    1374:	2a 31       	cpi	r18, 0x1A	; 26
    1376:	18 f5       	brcc	.+70     	; 0x13be <strtol+0x190>
    1378:	29 ea       	ldi	r18, 0xA9	; 169
    137a:	32 2e       	mov	r3, r18
    137c:	31 0e       	add	r3, r17
    137e:	23 2d       	mov	r18, r3
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	2e 15       	cp	r18, r14
    1384:	3f 05       	cpc	r19, r15
    1386:	dc f4       	brge	.+54     	; 0x13be <strtol+0x190>
    1388:	47 fd       	sbrc	r20, 7
    138a:	16 c0       	rjmp	.+44     	; 0x13b8 <strtol+0x18a>
    138c:	86 16       	cp	r8, r22
    138e:	97 06       	cpc	r9, r23
    1390:	a8 06       	cpc	r10, r24
    1392:	b9 06       	cpc	r11, r25
    1394:	70 f0       	brcs	.+28     	; 0x13b2 <strtol+0x184>
    1396:	a3 01       	movw	r20, r6
    1398:	92 01       	movw	r18, r4
    139a:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <__mulsi3>
    139e:	63 0d       	add	r22, r3
    13a0:	71 1d       	adc	r23, r1
    13a2:	81 1d       	adc	r24, r1
    13a4:	91 1d       	adc	r25, r1
    13a6:	61 30       	cpi	r22, 0x01	; 1
    13a8:	71 05       	cpc	r23, r1
    13aa:	81 05       	cpc	r24, r1
    13ac:	20 e8       	ldi	r18, 0x80	; 128
    13ae:	92 07       	cpc	r25, r18
    13b0:	10 f0       	brcs	.+4      	; 0x13b6 <strtol+0x188>
    13b2:	4f ef       	ldi	r20, 0xFF	; 255
    13b4:	01 c0       	rjmp	.+2      	; 0x13b8 <strtol+0x18a>
    13b6:	41 e0       	ldi	r20, 0x01	; 1
    13b8:	21 96       	adiw	r28, 0x01	; 1
    13ba:	10 81       	ld	r17, Z
    13bc:	cb cf       	rjmp	.-106    	; 0x1354 <strtol+0x126>
    13be:	20 2f       	mov	r18, r16
    13c0:	21 70       	andi	r18, 0x01	; 1
    13c2:	c1 14       	cp	r12, r1
    13c4:	d1 04       	cpc	r13, r1
    13c6:	71 f0       	breq	.+28     	; 0x13e4 <strtol+0x1b6>
    13c8:	44 23       	and	r20, r20
    13ca:	29 f0       	breq	.+10     	; 0x13d6 <strtol+0x1a8>
    13cc:	21 97       	sbiw	r28, 0x01	; 1
    13ce:	f6 01       	movw	r30, r12
    13d0:	d1 83       	std	Z+1, r29	; 0x01
    13d2:	c0 83       	st	Z, r28
    13d4:	07 c0       	rjmp	.+14     	; 0x13e4 <strtol+0x1b6>
    13d6:	01 ff       	sbrs	r16, 1
    13d8:	19 c0       	rjmp	.+50     	; 0x140c <strtol+0x1de>
    13da:	22 97       	sbiw	r28, 0x02	; 2
    13dc:	f6 01       	movw	r30, r12
    13de:	d1 83       	std	Z+1, r29	; 0x01
    13e0:	c0 83       	st	Z, r28
    13e2:	14 c0       	rjmp	.+40     	; 0x140c <strtol+0x1de>
    13e4:	47 ff       	sbrs	r20, 7
    13e6:	12 c0       	rjmp	.+36     	; 0x140c <strtol+0x1de>
    13e8:	22 23       	and	r18, r18
    13ea:	29 f0       	breq	.+10     	; 0x13f6 <strtol+0x1c8>
    13ec:	60 e0       	ldi	r22, 0x00	; 0
    13ee:	70 e0       	ldi	r23, 0x00	; 0
    13f0:	80 e0       	ldi	r24, 0x00	; 0
    13f2:	90 e8       	ldi	r25, 0x80	; 128
    13f4:	04 c0       	rjmp	.+8      	; 0x13fe <strtol+0x1d0>
    13f6:	6f ef       	ldi	r22, 0xFF	; 255
    13f8:	7f ef       	ldi	r23, 0xFF	; 255
    13fa:	8f ef       	ldi	r24, 0xFF	; 255
    13fc:	9f e7       	ldi	r25, 0x7F	; 127
    13fe:	22 e2       	ldi	r18, 0x22	; 34
    1400:	30 e0       	ldi	r19, 0x00	; 0
    1402:	30 93 8a 04 	sts	0x048A, r19	; 0x80048a <errno+0x1>
    1406:	20 93 89 04 	sts	0x0489, r18	; 0x800489 <errno>
    140a:	09 c0       	rjmp	.+18     	; 0x141e <strtol+0x1f0>
    140c:	22 23       	and	r18, r18
    140e:	81 f0       	breq	.+32     	; 0x1430 <strtol+0x202>
    1410:	90 95       	com	r25
    1412:	80 95       	com	r24
    1414:	70 95       	com	r23
    1416:	61 95       	neg	r22
    1418:	7f 4f       	sbci	r23, 0xFF	; 255
    141a:	8f 4f       	sbci	r24, 0xFF	; 255
    141c:	9f 4f       	sbci	r25, 0xFF	; 255
    141e:	46 2f       	mov	r20, r22
    1420:	37 2f       	mov	r19, r23
    1422:	28 2f       	mov	r18, r24
    1424:	12 c0       	rjmp	.+36     	; 0x144a <strtol+0x21c>
    1426:	40 e0       	ldi	r20, 0x00	; 0
    1428:	30 e0       	ldi	r19, 0x00	; 0
    142a:	20 e0       	ldi	r18, 0x00	; 0
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	0d c0       	rjmp	.+26     	; 0x144a <strtol+0x21c>
    1430:	97 ff       	sbrs	r25, 7
    1432:	f5 cf       	rjmp	.-22     	; 0x141e <strtol+0x1f0>
    1434:	82 e2       	ldi	r24, 0x22	; 34
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	90 93 8a 04 	sts	0x048A, r25	; 0x80048a <errno+0x1>
    143c:	80 93 89 04 	sts	0x0489, r24	; 0x800489 <errno>
    1440:	6f ef       	ldi	r22, 0xFF	; 255
    1442:	7f ef       	ldi	r23, 0xFF	; 255
    1444:	8f ef       	ldi	r24, 0xFF	; 255
    1446:	9f e7       	ldi	r25, 0x7F	; 127
    1448:	ea cf       	rjmp	.-44     	; 0x141e <strtol+0x1f0>
    144a:	64 2f       	mov	r22, r20
    144c:	73 2f       	mov	r23, r19
    144e:	82 2f       	mov	r24, r18
    1450:	cd b7       	in	r28, 0x3d	; 61
    1452:	de b7       	in	r29, 0x3e	; 62
    1454:	e1 e1       	ldi	r30, 0x11	; 17
    1456:	0c 94 51 0d 	jmp	0x1aa2	; 0x1aa2 <__epilogue_restores__+0x2>

0000145a <isspace>:
    145a:	91 11       	cpse	r25, r1
    145c:	0c 94 44 0c 	jmp	0x1888	; 0x1888 <__ctype_isfalse>
    1460:	80 32       	cpi	r24, 0x20	; 32
    1462:	19 f0       	breq	.+6      	; 0x146a <isspace+0x10>
    1464:	89 50       	subi	r24, 0x09	; 9
    1466:	85 50       	subi	r24, 0x05	; 5
    1468:	c8 f7       	brcc	.-14     	; 0x145c <isspace+0x2>
    146a:	08 95       	ret

0000146c <strcat>:
    146c:	fb 01       	movw	r30, r22
    146e:	dc 01       	movw	r26, r24
    1470:	0d 90       	ld	r0, X+
    1472:	00 20       	and	r0, r0
    1474:	e9 f7       	brne	.-6      	; 0x1470 <strcat+0x4>
    1476:	11 97       	sbiw	r26, 0x01	; 1
    1478:	01 90       	ld	r0, Z+
    147a:	0d 92       	st	X+, r0
    147c:	00 20       	and	r0, r0
    147e:	e1 f7       	brne	.-8      	; 0x1478 <strcat+0xc>
    1480:	08 95       	ret

00001482 <sprintf>:
    1482:	ae e0       	ldi	r26, 0x0E	; 14
    1484:	b0 e0       	ldi	r27, 0x00	; 0
    1486:	e7 e4       	ldi	r30, 0x47	; 71
    1488:	fa e0       	ldi	r31, 0x0A	; 10
    148a:	0c 94 42 0d 	jmp	0x1a84	; 0x1a84 <__prologue_saves__+0x1c>
    148e:	0d 89       	ldd	r16, Y+21	; 0x15
    1490:	1e 89       	ldd	r17, Y+22	; 0x16
    1492:	86 e0       	ldi	r24, 0x06	; 6
    1494:	8c 83       	std	Y+4, r24	; 0x04
    1496:	1a 83       	std	Y+2, r17	; 0x02
    1498:	09 83       	std	Y+1, r16	; 0x01
    149a:	8f ef       	ldi	r24, 0xFF	; 255
    149c:	9f e7       	ldi	r25, 0x7F	; 127
    149e:	9e 83       	std	Y+6, r25	; 0x06
    14a0:	8d 83       	std	Y+5, r24	; 0x05
    14a2:	ae 01       	movw	r20, r28
    14a4:	47 5e       	subi	r20, 0xE7	; 231
    14a6:	5f 4f       	sbci	r21, 0xFF	; 255
    14a8:	6f 89       	ldd	r22, Y+23	; 0x17
    14aa:	78 8d       	ldd	r23, Y+24	; 0x18
    14ac:	ce 01       	movw	r24, r28
    14ae:	01 96       	adiw	r24, 0x01	; 1
    14b0:	0e 94 63 0a 	call	0x14c6	; 0x14c6 <vfprintf>
    14b4:	ef 81       	ldd	r30, Y+7	; 0x07
    14b6:	f8 85       	ldd	r31, Y+8	; 0x08
    14b8:	e0 0f       	add	r30, r16
    14ba:	f1 1f       	adc	r31, r17
    14bc:	10 82       	st	Z, r1
    14be:	2e 96       	adiw	r28, 0x0e	; 14
    14c0:	e4 e0       	ldi	r30, 0x04	; 4
    14c2:	0c 94 5e 0d 	jmp	0x1abc	; 0x1abc <__epilogue_restores__+0x1c>

000014c6 <vfprintf>:
    14c6:	ab e0       	ldi	r26, 0x0B	; 11
    14c8:	b0 e0       	ldi	r27, 0x00	; 0
    14ca:	e9 e6       	ldi	r30, 0x69	; 105
    14cc:	fa e0       	ldi	r31, 0x0A	; 10
    14ce:	0c 94 34 0d 	jmp	0x1a68	; 0x1a68 <__prologue_saves__>
    14d2:	6c 01       	movw	r12, r24
    14d4:	7b 01       	movw	r14, r22
    14d6:	8a 01       	movw	r16, r20
    14d8:	fc 01       	movw	r30, r24
    14da:	17 82       	std	Z+7, r1	; 0x07
    14dc:	16 82       	std	Z+6, r1	; 0x06
    14de:	83 81       	ldd	r24, Z+3	; 0x03
    14e0:	81 ff       	sbrs	r24, 1
    14e2:	cc c1       	rjmp	.+920    	; 0x187c <vfprintf+0x3b6>
    14e4:	ce 01       	movw	r24, r28
    14e6:	01 96       	adiw	r24, 0x01	; 1
    14e8:	3c 01       	movw	r6, r24
    14ea:	f6 01       	movw	r30, r12
    14ec:	93 81       	ldd	r25, Z+3	; 0x03
    14ee:	f7 01       	movw	r30, r14
    14f0:	93 fd       	sbrc	r25, 3
    14f2:	85 91       	lpm	r24, Z+
    14f4:	93 ff       	sbrs	r25, 3
    14f6:	81 91       	ld	r24, Z+
    14f8:	7f 01       	movw	r14, r30
    14fa:	88 23       	and	r24, r24
    14fc:	09 f4       	brne	.+2      	; 0x1500 <vfprintf+0x3a>
    14fe:	ba c1       	rjmp	.+884    	; 0x1874 <vfprintf+0x3ae>
    1500:	85 32       	cpi	r24, 0x25	; 37
    1502:	39 f4       	brne	.+14     	; 0x1512 <vfprintf+0x4c>
    1504:	93 fd       	sbrc	r25, 3
    1506:	85 91       	lpm	r24, Z+
    1508:	93 ff       	sbrs	r25, 3
    150a:	81 91       	ld	r24, Z+
    150c:	7f 01       	movw	r14, r30
    150e:	85 32       	cpi	r24, 0x25	; 37
    1510:	29 f4       	brne	.+10     	; 0x151c <vfprintf+0x56>
    1512:	b6 01       	movw	r22, r12
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <fputc>
    151a:	e7 cf       	rjmp	.-50     	; 0x14ea <vfprintf+0x24>
    151c:	91 2c       	mov	r9, r1
    151e:	21 2c       	mov	r2, r1
    1520:	31 2c       	mov	r3, r1
    1522:	ff e1       	ldi	r31, 0x1F	; 31
    1524:	f3 15       	cp	r31, r3
    1526:	d8 f0       	brcs	.+54     	; 0x155e <vfprintf+0x98>
    1528:	8b 32       	cpi	r24, 0x2B	; 43
    152a:	79 f0       	breq	.+30     	; 0x154a <vfprintf+0x84>
    152c:	38 f4       	brcc	.+14     	; 0x153c <vfprintf+0x76>
    152e:	80 32       	cpi	r24, 0x20	; 32
    1530:	79 f0       	breq	.+30     	; 0x1550 <vfprintf+0x8a>
    1532:	83 32       	cpi	r24, 0x23	; 35
    1534:	a1 f4       	brne	.+40     	; 0x155e <vfprintf+0x98>
    1536:	23 2d       	mov	r18, r3
    1538:	20 61       	ori	r18, 0x10	; 16
    153a:	1d c0       	rjmp	.+58     	; 0x1576 <vfprintf+0xb0>
    153c:	8d 32       	cpi	r24, 0x2D	; 45
    153e:	61 f0       	breq	.+24     	; 0x1558 <vfprintf+0x92>
    1540:	80 33       	cpi	r24, 0x30	; 48
    1542:	69 f4       	brne	.+26     	; 0x155e <vfprintf+0x98>
    1544:	23 2d       	mov	r18, r3
    1546:	21 60       	ori	r18, 0x01	; 1
    1548:	16 c0       	rjmp	.+44     	; 0x1576 <vfprintf+0xb0>
    154a:	83 2d       	mov	r24, r3
    154c:	82 60       	ori	r24, 0x02	; 2
    154e:	38 2e       	mov	r3, r24
    1550:	e3 2d       	mov	r30, r3
    1552:	e4 60       	ori	r30, 0x04	; 4
    1554:	3e 2e       	mov	r3, r30
    1556:	2a c0       	rjmp	.+84     	; 0x15ac <vfprintf+0xe6>
    1558:	f3 2d       	mov	r31, r3
    155a:	f8 60       	ori	r31, 0x08	; 8
    155c:	1d c0       	rjmp	.+58     	; 0x1598 <vfprintf+0xd2>
    155e:	37 fc       	sbrc	r3, 7
    1560:	2d c0       	rjmp	.+90     	; 0x15bc <vfprintf+0xf6>
    1562:	20 ed       	ldi	r18, 0xD0	; 208
    1564:	28 0f       	add	r18, r24
    1566:	2a 30       	cpi	r18, 0x0A	; 10
    1568:	40 f0       	brcs	.+16     	; 0x157a <vfprintf+0xb4>
    156a:	8e 32       	cpi	r24, 0x2E	; 46
    156c:	b9 f4       	brne	.+46     	; 0x159c <vfprintf+0xd6>
    156e:	36 fc       	sbrc	r3, 6
    1570:	81 c1       	rjmp	.+770    	; 0x1874 <vfprintf+0x3ae>
    1572:	23 2d       	mov	r18, r3
    1574:	20 64       	ori	r18, 0x40	; 64
    1576:	32 2e       	mov	r3, r18
    1578:	19 c0       	rjmp	.+50     	; 0x15ac <vfprintf+0xe6>
    157a:	36 fe       	sbrs	r3, 6
    157c:	06 c0       	rjmp	.+12     	; 0x158a <vfprintf+0xc4>
    157e:	8a e0       	ldi	r24, 0x0A	; 10
    1580:	98 9e       	mul	r9, r24
    1582:	20 0d       	add	r18, r0
    1584:	11 24       	eor	r1, r1
    1586:	92 2e       	mov	r9, r18
    1588:	11 c0       	rjmp	.+34     	; 0x15ac <vfprintf+0xe6>
    158a:	ea e0       	ldi	r30, 0x0A	; 10
    158c:	2e 9e       	mul	r2, r30
    158e:	20 0d       	add	r18, r0
    1590:	11 24       	eor	r1, r1
    1592:	22 2e       	mov	r2, r18
    1594:	f3 2d       	mov	r31, r3
    1596:	f0 62       	ori	r31, 0x20	; 32
    1598:	3f 2e       	mov	r3, r31
    159a:	08 c0       	rjmp	.+16     	; 0x15ac <vfprintf+0xe6>
    159c:	8c 36       	cpi	r24, 0x6C	; 108
    159e:	21 f4       	brne	.+8      	; 0x15a8 <vfprintf+0xe2>
    15a0:	83 2d       	mov	r24, r3
    15a2:	80 68       	ori	r24, 0x80	; 128
    15a4:	38 2e       	mov	r3, r24
    15a6:	02 c0       	rjmp	.+4      	; 0x15ac <vfprintf+0xe6>
    15a8:	88 36       	cpi	r24, 0x68	; 104
    15aa:	41 f4       	brne	.+16     	; 0x15bc <vfprintf+0xf6>
    15ac:	f7 01       	movw	r30, r14
    15ae:	93 fd       	sbrc	r25, 3
    15b0:	85 91       	lpm	r24, Z+
    15b2:	93 ff       	sbrs	r25, 3
    15b4:	81 91       	ld	r24, Z+
    15b6:	7f 01       	movw	r14, r30
    15b8:	81 11       	cpse	r24, r1
    15ba:	b3 cf       	rjmp	.-154    	; 0x1522 <vfprintf+0x5c>
    15bc:	98 2f       	mov	r25, r24
    15be:	9f 7d       	andi	r25, 0xDF	; 223
    15c0:	95 54       	subi	r25, 0x45	; 69
    15c2:	93 30       	cpi	r25, 0x03	; 3
    15c4:	28 f4       	brcc	.+10     	; 0x15d0 <vfprintf+0x10a>
    15c6:	0c 5f       	subi	r16, 0xFC	; 252
    15c8:	1f 4f       	sbci	r17, 0xFF	; 255
    15ca:	9f e3       	ldi	r25, 0x3F	; 63
    15cc:	99 83       	std	Y+1, r25	; 0x01
    15ce:	0d c0       	rjmp	.+26     	; 0x15ea <vfprintf+0x124>
    15d0:	83 36       	cpi	r24, 0x63	; 99
    15d2:	31 f0       	breq	.+12     	; 0x15e0 <vfprintf+0x11a>
    15d4:	83 37       	cpi	r24, 0x73	; 115
    15d6:	71 f0       	breq	.+28     	; 0x15f4 <vfprintf+0x12e>
    15d8:	83 35       	cpi	r24, 0x53	; 83
    15da:	09 f0       	breq	.+2      	; 0x15de <vfprintf+0x118>
    15dc:	59 c0       	rjmp	.+178    	; 0x1690 <vfprintf+0x1ca>
    15de:	21 c0       	rjmp	.+66     	; 0x1622 <vfprintf+0x15c>
    15e0:	f8 01       	movw	r30, r16
    15e2:	80 81       	ld	r24, Z
    15e4:	89 83       	std	Y+1, r24	; 0x01
    15e6:	0e 5f       	subi	r16, 0xFE	; 254
    15e8:	1f 4f       	sbci	r17, 0xFF	; 255
    15ea:	88 24       	eor	r8, r8
    15ec:	83 94       	inc	r8
    15ee:	91 2c       	mov	r9, r1
    15f0:	53 01       	movw	r10, r6
    15f2:	13 c0       	rjmp	.+38     	; 0x161a <vfprintf+0x154>
    15f4:	28 01       	movw	r4, r16
    15f6:	f2 e0       	ldi	r31, 0x02	; 2
    15f8:	4f 0e       	add	r4, r31
    15fa:	51 1c       	adc	r5, r1
    15fc:	f8 01       	movw	r30, r16
    15fe:	a0 80       	ld	r10, Z
    1600:	b1 80       	ldd	r11, Z+1	; 0x01
    1602:	36 fe       	sbrs	r3, 6
    1604:	03 c0       	rjmp	.+6      	; 0x160c <vfprintf+0x146>
    1606:	69 2d       	mov	r22, r9
    1608:	70 e0       	ldi	r23, 0x00	; 0
    160a:	02 c0       	rjmp	.+4      	; 0x1610 <vfprintf+0x14a>
    160c:	6f ef       	ldi	r22, 0xFF	; 255
    160e:	7f ef       	ldi	r23, 0xFF	; 255
    1610:	c5 01       	movw	r24, r10
    1612:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <strnlen>
    1616:	4c 01       	movw	r8, r24
    1618:	82 01       	movw	r16, r4
    161a:	f3 2d       	mov	r31, r3
    161c:	ff 77       	andi	r31, 0x7F	; 127
    161e:	3f 2e       	mov	r3, r31
    1620:	16 c0       	rjmp	.+44     	; 0x164e <vfprintf+0x188>
    1622:	28 01       	movw	r4, r16
    1624:	22 e0       	ldi	r18, 0x02	; 2
    1626:	42 0e       	add	r4, r18
    1628:	51 1c       	adc	r5, r1
    162a:	f8 01       	movw	r30, r16
    162c:	a0 80       	ld	r10, Z
    162e:	b1 80       	ldd	r11, Z+1	; 0x01
    1630:	36 fe       	sbrs	r3, 6
    1632:	03 c0       	rjmp	.+6      	; 0x163a <vfprintf+0x174>
    1634:	69 2d       	mov	r22, r9
    1636:	70 e0       	ldi	r23, 0x00	; 0
    1638:	02 c0       	rjmp	.+4      	; 0x163e <vfprintf+0x178>
    163a:	6f ef       	ldi	r22, 0xFF	; 255
    163c:	7f ef       	ldi	r23, 0xFF	; 255
    163e:	c5 01       	movw	r24, r10
    1640:	0e 94 47 0c 	call	0x188e	; 0x188e <strnlen_P>
    1644:	4c 01       	movw	r8, r24
    1646:	f3 2d       	mov	r31, r3
    1648:	f0 68       	ori	r31, 0x80	; 128
    164a:	3f 2e       	mov	r3, r31
    164c:	82 01       	movw	r16, r4
    164e:	33 fc       	sbrc	r3, 3
    1650:	1b c0       	rjmp	.+54     	; 0x1688 <vfprintf+0x1c2>
    1652:	82 2d       	mov	r24, r2
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	88 16       	cp	r8, r24
    1658:	99 06       	cpc	r9, r25
    165a:	b0 f4       	brcc	.+44     	; 0x1688 <vfprintf+0x1c2>
    165c:	b6 01       	movw	r22, r12
    165e:	80 e2       	ldi	r24, 0x20	; 32
    1660:	90 e0       	ldi	r25, 0x00	; 0
    1662:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <fputc>
    1666:	2a 94       	dec	r2
    1668:	f4 cf       	rjmp	.-24     	; 0x1652 <vfprintf+0x18c>
    166a:	f5 01       	movw	r30, r10
    166c:	37 fc       	sbrc	r3, 7
    166e:	85 91       	lpm	r24, Z+
    1670:	37 fe       	sbrs	r3, 7
    1672:	81 91       	ld	r24, Z+
    1674:	5f 01       	movw	r10, r30
    1676:	b6 01       	movw	r22, r12
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <fputc>
    167e:	21 10       	cpse	r2, r1
    1680:	2a 94       	dec	r2
    1682:	21 e0       	ldi	r18, 0x01	; 1
    1684:	82 1a       	sub	r8, r18
    1686:	91 08       	sbc	r9, r1
    1688:	81 14       	cp	r8, r1
    168a:	91 04       	cpc	r9, r1
    168c:	71 f7       	brne	.-36     	; 0x166a <vfprintf+0x1a4>
    168e:	e8 c0       	rjmp	.+464    	; 0x1860 <vfprintf+0x39a>
    1690:	84 36       	cpi	r24, 0x64	; 100
    1692:	11 f0       	breq	.+4      	; 0x1698 <vfprintf+0x1d2>
    1694:	89 36       	cpi	r24, 0x69	; 105
    1696:	41 f5       	brne	.+80     	; 0x16e8 <vfprintf+0x222>
    1698:	f8 01       	movw	r30, r16
    169a:	37 fe       	sbrs	r3, 7
    169c:	07 c0       	rjmp	.+14     	; 0x16ac <vfprintf+0x1e6>
    169e:	60 81       	ld	r22, Z
    16a0:	71 81       	ldd	r23, Z+1	; 0x01
    16a2:	82 81       	ldd	r24, Z+2	; 0x02
    16a4:	93 81       	ldd	r25, Z+3	; 0x03
    16a6:	0c 5f       	subi	r16, 0xFC	; 252
    16a8:	1f 4f       	sbci	r17, 0xFF	; 255
    16aa:	08 c0       	rjmp	.+16     	; 0x16bc <vfprintf+0x1f6>
    16ac:	60 81       	ld	r22, Z
    16ae:	71 81       	ldd	r23, Z+1	; 0x01
    16b0:	07 2e       	mov	r0, r23
    16b2:	00 0c       	add	r0, r0
    16b4:	88 0b       	sbc	r24, r24
    16b6:	99 0b       	sbc	r25, r25
    16b8:	0e 5f       	subi	r16, 0xFE	; 254
    16ba:	1f 4f       	sbci	r17, 0xFF	; 255
    16bc:	f3 2d       	mov	r31, r3
    16be:	ff 76       	andi	r31, 0x6F	; 111
    16c0:	3f 2e       	mov	r3, r31
    16c2:	97 ff       	sbrs	r25, 7
    16c4:	09 c0       	rjmp	.+18     	; 0x16d8 <vfprintf+0x212>
    16c6:	90 95       	com	r25
    16c8:	80 95       	com	r24
    16ca:	70 95       	com	r23
    16cc:	61 95       	neg	r22
    16ce:	7f 4f       	sbci	r23, 0xFF	; 255
    16d0:	8f 4f       	sbci	r24, 0xFF	; 255
    16d2:	9f 4f       	sbci	r25, 0xFF	; 255
    16d4:	f0 68       	ori	r31, 0x80	; 128
    16d6:	3f 2e       	mov	r3, r31
    16d8:	2a e0       	ldi	r18, 0x0A	; 10
    16da:	30 e0       	ldi	r19, 0x00	; 0
    16dc:	a3 01       	movw	r20, r6
    16de:	0e 94 99 0c 	call	0x1932	; 0x1932 <__ultoa_invert>
    16e2:	88 2e       	mov	r8, r24
    16e4:	86 18       	sub	r8, r6
    16e6:	45 c0       	rjmp	.+138    	; 0x1772 <vfprintf+0x2ac>
    16e8:	85 37       	cpi	r24, 0x75	; 117
    16ea:	31 f4       	brne	.+12     	; 0x16f8 <vfprintf+0x232>
    16ec:	23 2d       	mov	r18, r3
    16ee:	2f 7e       	andi	r18, 0xEF	; 239
    16f0:	b2 2e       	mov	r11, r18
    16f2:	2a e0       	ldi	r18, 0x0A	; 10
    16f4:	30 e0       	ldi	r19, 0x00	; 0
    16f6:	25 c0       	rjmp	.+74     	; 0x1742 <vfprintf+0x27c>
    16f8:	93 2d       	mov	r25, r3
    16fa:	99 7f       	andi	r25, 0xF9	; 249
    16fc:	b9 2e       	mov	r11, r25
    16fe:	8f 36       	cpi	r24, 0x6F	; 111
    1700:	c1 f0       	breq	.+48     	; 0x1732 <vfprintf+0x26c>
    1702:	18 f4       	brcc	.+6      	; 0x170a <vfprintf+0x244>
    1704:	88 35       	cpi	r24, 0x58	; 88
    1706:	79 f0       	breq	.+30     	; 0x1726 <vfprintf+0x260>
    1708:	b5 c0       	rjmp	.+362    	; 0x1874 <vfprintf+0x3ae>
    170a:	80 37       	cpi	r24, 0x70	; 112
    170c:	19 f0       	breq	.+6      	; 0x1714 <vfprintf+0x24e>
    170e:	88 37       	cpi	r24, 0x78	; 120
    1710:	21 f0       	breq	.+8      	; 0x171a <vfprintf+0x254>
    1712:	b0 c0       	rjmp	.+352    	; 0x1874 <vfprintf+0x3ae>
    1714:	e9 2f       	mov	r30, r25
    1716:	e0 61       	ori	r30, 0x10	; 16
    1718:	be 2e       	mov	r11, r30
    171a:	b4 fe       	sbrs	r11, 4
    171c:	0d c0       	rjmp	.+26     	; 0x1738 <vfprintf+0x272>
    171e:	fb 2d       	mov	r31, r11
    1720:	f4 60       	ori	r31, 0x04	; 4
    1722:	bf 2e       	mov	r11, r31
    1724:	09 c0       	rjmp	.+18     	; 0x1738 <vfprintf+0x272>
    1726:	34 fe       	sbrs	r3, 4
    1728:	0a c0       	rjmp	.+20     	; 0x173e <vfprintf+0x278>
    172a:	29 2f       	mov	r18, r25
    172c:	26 60       	ori	r18, 0x06	; 6
    172e:	b2 2e       	mov	r11, r18
    1730:	06 c0       	rjmp	.+12     	; 0x173e <vfprintf+0x278>
    1732:	28 e0       	ldi	r18, 0x08	; 8
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	05 c0       	rjmp	.+10     	; 0x1742 <vfprintf+0x27c>
    1738:	20 e1       	ldi	r18, 0x10	; 16
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	02 c0       	rjmp	.+4      	; 0x1742 <vfprintf+0x27c>
    173e:	20 e1       	ldi	r18, 0x10	; 16
    1740:	32 e0       	ldi	r19, 0x02	; 2
    1742:	f8 01       	movw	r30, r16
    1744:	b7 fe       	sbrs	r11, 7
    1746:	07 c0       	rjmp	.+14     	; 0x1756 <vfprintf+0x290>
    1748:	60 81       	ld	r22, Z
    174a:	71 81       	ldd	r23, Z+1	; 0x01
    174c:	82 81       	ldd	r24, Z+2	; 0x02
    174e:	93 81       	ldd	r25, Z+3	; 0x03
    1750:	0c 5f       	subi	r16, 0xFC	; 252
    1752:	1f 4f       	sbci	r17, 0xFF	; 255
    1754:	06 c0       	rjmp	.+12     	; 0x1762 <vfprintf+0x29c>
    1756:	60 81       	ld	r22, Z
    1758:	71 81       	ldd	r23, Z+1	; 0x01
    175a:	80 e0       	ldi	r24, 0x00	; 0
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	0e 5f       	subi	r16, 0xFE	; 254
    1760:	1f 4f       	sbci	r17, 0xFF	; 255
    1762:	a3 01       	movw	r20, r6
    1764:	0e 94 99 0c 	call	0x1932	; 0x1932 <__ultoa_invert>
    1768:	88 2e       	mov	r8, r24
    176a:	86 18       	sub	r8, r6
    176c:	fb 2d       	mov	r31, r11
    176e:	ff 77       	andi	r31, 0x7F	; 127
    1770:	3f 2e       	mov	r3, r31
    1772:	36 fe       	sbrs	r3, 6
    1774:	0d c0       	rjmp	.+26     	; 0x1790 <vfprintf+0x2ca>
    1776:	23 2d       	mov	r18, r3
    1778:	2e 7f       	andi	r18, 0xFE	; 254
    177a:	a2 2e       	mov	r10, r18
    177c:	89 14       	cp	r8, r9
    177e:	58 f4       	brcc	.+22     	; 0x1796 <vfprintf+0x2d0>
    1780:	34 fe       	sbrs	r3, 4
    1782:	0b c0       	rjmp	.+22     	; 0x179a <vfprintf+0x2d4>
    1784:	32 fc       	sbrc	r3, 2
    1786:	09 c0       	rjmp	.+18     	; 0x179a <vfprintf+0x2d4>
    1788:	83 2d       	mov	r24, r3
    178a:	8e 7e       	andi	r24, 0xEE	; 238
    178c:	a8 2e       	mov	r10, r24
    178e:	05 c0       	rjmp	.+10     	; 0x179a <vfprintf+0x2d4>
    1790:	b8 2c       	mov	r11, r8
    1792:	a3 2c       	mov	r10, r3
    1794:	03 c0       	rjmp	.+6      	; 0x179c <vfprintf+0x2d6>
    1796:	b8 2c       	mov	r11, r8
    1798:	01 c0       	rjmp	.+2      	; 0x179c <vfprintf+0x2d6>
    179a:	b9 2c       	mov	r11, r9
    179c:	a4 fe       	sbrs	r10, 4
    179e:	0f c0       	rjmp	.+30     	; 0x17be <vfprintf+0x2f8>
    17a0:	fe 01       	movw	r30, r28
    17a2:	e8 0d       	add	r30, r8
    17a4:	f1 1d       	adc	r31, r1
    17a6:	80 81       	ld	r24, Z
    17a8:	80 33       	cpi	r24, 0x30	; 48
    17aa:	21 f4       	brne	.+8      	; 0x17b4 <vfprintf+0x2ee>
    17ac:	9a 2d       	mov	r25, r10
    17ae:	99 7e       	andi	r25, 0xE9	; 233
    17b0:	a9 2e       	mov	r10, r25
    17b2:	09 c0       	rjmp	.+18     	; 0x17c6 <vfprintf+0x300>
    17b4:	a2 fe       	sbrs	r10, 2
    17b6:	06 c0       	rjmp	.+12     	; 0x17c4 <vfprintf+0x2fe>
    17b8:	b3 94       	inc	r11
    17ba:	b3 94       	inc	r11
    17bc:	04 c0       	rjmp	.+8      	; 0x17c6 <vfprintf+0x300>
    17be:	8a 2d       	mov	r24, r10
    17c0:	86 78       	andi	r24, 0x86	; 134
    17c2:	09 f0       	breq	.+2      	; 0x17c6 <vfprintf+0x300>
    17c4:	b3 94       	inc	r11
    17c6:	a3 fc       	sbrc	r10, 3
    17c8:	11 c0       	rjmp	.+34     	; 0x17ec <vfprintf+0x326>
    17ca:	a0 fe       	sbrs	r10, 0
    17cc:	06 c0       	rjmp	.+12     	; 0x17da <vfprintf+0x314>
    17ce:	b2 14       	cp	r11, r2
    17d0:	88 f4       	brcc	.+34     	; 0x17f4 <vfprintf+0x32e>
    17d2:	28 0c       	add	r2, r8
    17d4:	92 2c       	mov	r9, r2
    17d6:	9b 18       	sub	r9, r11
    17d8:	0e c0       	rjmp	.+28     	; 0x17f6 <vfprintf+0x330>
    17da:	b2 14       	cp	r11, r2
    17dc:	60 f4       	brcc	.+24     	; 0x17f6 <vfprintf+0x330>
    17de:	b6 01       	movw	r22, r12
    17e0:	80 e2       	ldi	r24, 0x20	; 32
    17e2:	90 e0       	ldi	r25, 0x00	; 0
    17e4:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <fputc>
    17e8:	b3 94       	inc	r11
    17ea:	f7 cf       	rjmp	.-18     	; 0x17da <vfprintf+0x314>
    17ec:	b2 14       	cp	r11, r2
    17ee:	18 f4       	brcc	.+6      	; 0x17f6 <vfprintf+0x330>
    17f0:	2b 18       	sub	r2, r11
    17f2:	02 c0       	rjmp	.+4      	; 0x17f8 <vfprintf+0x332>
    17f4:	98 2c       	mov	r9, r8
    17f6:	21 2c       	mov	r2, r1
    17f8:	a4 fe       	sbrs	r10, 4
    17fa:	10 c0       	rjmp	.+32     	; 0x181c <vfprintf+0x356>
    17fc:	b6 01       	movw	r22, r12
    17fe:	80 e3       	ldi	r24, 0x30	; 48
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <fputc>
    1806:	a2 fe       	sbrs	r10, 2
    1808:	17 c0       	rjmp	.+46     	; 0x1838 <vfprintf+0x372>
    180a:	a1 fc       	sbrc	r10, 1
    180c:	03 c0       	rjmp	.+6      	; 0x1814 <vfprintf+0x34e>
    180e:	88 e7       	ldi	r24, 0x78	; 120
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	02 c0       	rjmp	.+4      	; 0x1818 <vfprintf+0x352>
    1814:	88 e5       	ldi	r24, 0x58	; 88
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	b6 01       	movw	r22, r12
    181a:	0c c0       	rjmp	.+24     	; 0x1834 <vfprintf+0x36e>
    181c:	8a 2d       	mov	r24, r10
    181e:	86 78       	andi	r24, 0x86	; 134
    1820:	59 f0       	breq	.+22     	; 0x1838 <vfprintf+0x372>
    1822:	a1 fe       	sbrs	r10, 1
    1824:	02 c0       	rjmp	.+4      	; 0x182a <vfprintf+0x364>
    1826:	8b e2       	ldi	r24, 0x2B	; 43
    1828:	01 c0       	rjmp	.+2      	; 0x182c <vfprintf+0x366>
    182a:	80 e2       	ldi	r24, 0x20	; 32
    182c:	a7 fc       	sbrc	r10, 7
    182e:	8d e2       	ldi	r24, 0x2D	; 45
    1830:	b6 01       	movw	r22, r12
    1832:	90 e0       	ldi	r25, 0x00	; 0
    1834:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <fputc>
    1838:	89 14       	cp	r8, r9
    183a:	38 f4       	brcc	.+14     	; 0x184a <vfprintf+0x384>
    183c:	b6 01       	movw	r22, r12
    183e:	80 e3       	ldi	r24, 0x30	; 48
    1840:	90 e0       	ldi	r25, 0x00	; 0
    1842:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <fputc>
    1846:	9a 94       	dec	r9
    1848:	f7 cf       	rjmp	.-18     	; 0x1838 <vfprintf+0x372>
    184a:	8a 94       	dec	r8
    184c:	f3 01       	movw	r30, r6
    184e:	e8 0d       	add	r30, r8
    1850:	f1 1d       	adc	r31, r1
    1852:	80 81       	ld	r24, Z
    1854:	b6 01       	movw	r22, r12
    1856:	90 e0       	ldi	r25, 0x00	; 0
    1858:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <fputc>
    185c:	81 10       	cpse	r8, r1
    185e:	f5 cf       	rjmp	.-22     	; 0x184a <vfprintf+0x384>
    1860:	22 20       	and	r2, r2
    1862:	09 f4       	brne	.+2      	; 0x1866 <vfprintf+0x3a0>
    1864:	42 ce       	rjmp	.-892    	; 0x14ea <vfprintf+0x24>
    1866:	b6 01       	movw	r22, r12
    1868:	80 e2       	ldi	r24, 0x20	; 32
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <fputc>
    1870:	2a 94       	dec	r2
    1872:	f6 cf       	rjmp	.-20     	; 0x1860 <vfprintf+0x39a>
    1874:	f6 01       	movw	r30, r12
    1876:	86 81       	ldd	r24, Z+6	; 0x06
    1878:	97 81       	ldd	r25, Z+7	; 0x07
    187a:	02 c0       	rjmp	.+4      	; 0x1880 <vfprintf+0x3ba>
    187c:	8f ef       	ldi	r24, 0xFF	; 255
    187e:	9f ef       	ldi	r25, 0xFF	; 255
    1880:	2b 96       	adiw	r28, 0x0b	; 11
    1882:	e2 e1       	ldi	r30, 0x12	; 18
    1884:	0c 94 50 0d 	jmp	0x1aa0	; 0x1aa0 <__epilogue_restores__>

00001888 <__ctype_isfalse>:
    1888:	99 27       	eor	r25, r25
    188a:	88 27       	eor	r24, r24

0000188c <__ctype_istrue>:
    188c:	08 95       	ret

0000188e <strnlen_P>:
    188e:	fc 01       	movw	r30, r24
    1890:	05 90       	lpm	r0, Z+
    1892:	61 50       	subi	r22, 0x01	; 1
    1894:	70 40       	sbci	r23, 0x00	; 0
    1896:	01 10       	cpse	r0, r1
    1898:	d8 f7       	brcc	.-10     	; 0x1890 <strnlen_P+0x2>
    189a:	80 95       	com	r24
    189c:	90 95       	com	r25
    189e:	8e 0f       	add	r24, r30
    18a0:	9f 1f       	adc	r25, r31
    18a2:	08 95       	ret

000018a4 <strnlen>:
    18a4:	fc 01       	movw	r30, r24
    18a6:	61 50       	subi	r22, 0x01	; 1
    18a8:	70 40       	sbci	r23, 0x00	; 0
    18aa:	01 90       	ld	r0, Z+
    18ac:	01 10       	cpse	r0, r1
    18ae:	d8 f7       	brcc	.-10     	; 0x18a6 <strnlen+0x2>
    18b0:	80 95       	com	r24
    18b2:	90 95       	com	r25
    18b4:	8e 0f       	add	r24, r30
    18b6:	9f 1f       	adc	r25, r31
    18b8:	08 95       	ret

000018ba <fputc>:
    18ba:	0f 93       	push	r16
    18bc:	1f 93       	push	r17
    18be:	cf 93       	push	r28
    18c0:	df 93       	push	r29
    18c2:	fb 01       	movw	r30, r22
    18c4:	23 81       	ldd	r18, Z+3	; 0x03
    18c6:	21 fd       	sbrc	r18, 1
    18c8:	03 c0       	rjmp	.+6      	; 0x18d0 <fputc+0x16>
    18ca:	8f ef       	ldi	r24, 0xFF	; 255
    18cc:	9f ef       	ldi	r25, 0xFF	; 255
    18ce:	2c c0       	rjmp	.+88     	; 0x1928 <fputc+0x6e>
    18d0:	22 ff       	sbrs	r18, 2
    18d2:	16 c0       	rjmp	.+44     	; 0x1900 <fputc+0x46>
    18d4:	46 81       	ldd	r20, Z+6	; 0x06
    18d6:	57 81       	ldd	r21, Z+7	; 0x07
    18d8:	24 81       	ldd	r18, Z+4	; 0x04
    18da:	35 81       	ldd	r19, Z+5	; 0x05
    18dc:	42 17       	cp	r20, r18
    18de:	53 07       	cpc	r21, r19
    18e0:	44 f4       	brge	.+16     	; 0x18f2 <fputc+0x38>
    18e2:	a0 81       	ld	r26, Z
    18e4:	b1 81       	ldd	r27, Z+1	; 0x01
    18e6:	9d 01       	movw	r18, r26
    18e8:	2f 5f       	subi	r18, 0xFF	; 255
    18ea:	3f 4f       	sbci	r19, 0xFF	; 255
    18ec:	31 83       	std	Z+1, r19	; 0x01
    18ee:	20 83       	st	Z, r18
    18f0:	8c 93       	st	X, r24
    18f2:	26 81       	ldd	r18, Z+6	; 0x06
    18f4:	37 81       	ldd	r19, Z+7	; 0x07
    18f6:	2f 5f       	subi	r18, 0xFF	; 255
    18f8:	3f 4f       	sbci	r19, 0xFF	; 255
    18fa:	37 83       	std	Z+7, r19	; 0x07
    18fc:	26 83       	std	Z+6, r18	; 0x06
    18fe:	14 c0       	rjmp	.+40     	; 0x1928 <fputc+0x6e>
    1900:	8b 01       	movw	r16, r22
    1902:	ec 01       	movw	r28, r24
    1904:	fb 01       	movw	r30, r22
    1906:	00 84       	ldd	r0, Z+8	; 0x08
    1908:	f1 85       	ldd	r31, Z+9	; 0x09
    190a:	e0 2d       	mov	r30, r0
    190c:	09 95       	icall
    190e:	89 2b       	or	r24, r25
    1910:	e1 f6       	brne	.-72     	; 0x18ca <fputc+0x10>
    1912:	d8 01       	movw	r26, r16
    1914:	16 96       	adiw	r26, 0x06	; 6
    1916:	8d 91       	ld	r24, X+
    1918:	9c 91       	ld	r25, X
    191a:	17 97       	sbiw	r26, 0x07	; 7
    191c:	01 96       	adiw	r24, 0x01	; 1
    191e:	17 96       	adiw	r26, 0x07	; 7
    1920:	9c 93       	st	X, r25
    1922:	8e 93       	st	-X, r24
    1924:	16 97       	sbiw	r26, 0x06	; 6
    1926:	ce 01       	movw	r24, r28
    1928:	df 91       	pop	r29
    192a:	cf 91       	pop	r28
    192c:	1f 91       	pop	r17
    192e:	0f 91       	pop	r16
    1930:	08 95       	ret

00001932 <__ultoa_invert>:
    1932:	fa 01       	movw	r30, r20
    1934:	aa 27       	eor	r26, r26
    1936:	28 30       	cpi	r18, 0x08	; 8
    1938:	51 f1       	breq	.+84     	; 0x198e <__ultoa_invert+0x5c>
    193a:	20 31       	cpi	r18, 0x10	; 16
    193c:	81 f1       	breq	.+96     	; 0x199e <__ultoa_invert+0x6c>
    193e:	e8 94       	clt
    1940:	6f 93       	push	r22
    1942:	6e 7f       	andi	r22, 0xFE	; 254
    1944:	6e 5f       	subi	r22, 0xFE	; 254
    1946:	7f 4f       	sbci	r23, 0xFF	; 255
    1948:	8f 4f       	sbci	r24, 0xFF	; 255
    194a:	9f 4f       	sbci	r25, 0xFF	; 255
    194c:	af 4f       	sbci	r26, 0xFF	; 255
    194e:	b1 e0       	ldi	r27, 0x01	; 1
    1950:	3e d0       	rcall	.+124    	; 0x19ce <__ultoa_invert+0x9c>
    1952:	b4 e0       	ldi	r27, 0x04	; 4
    1954:	3c d0       	rcall	.+120    	; 0x19ce <__ultoa_invert+0x9c>
    1956:	67 0f       	add	r22, r23
    1958:	78 1f       	adc	r23, r24
    195a:	89 1f       	adc	r24, r25
    195c:	9a 1f       	adc	r25, r26
    195e:	a1 1d       	adc	r26, r1
    1960:	68 0f       	add	r22, r24
    1962:	79 1f       	adc	r23, r25
    1964:	8a 1f       	adc	r24, r26
    1966:	91 1d       	adc	r25, r1
    1968:	a1 1d       	adc	r26, r1
    196a:	6a 0f       	add	r22, r26
    196c:	71 1d       	adc	r23, r1
    196e:	81 1d       	adc	r24, r1
    1970:	91 1d       	adc	r25, r1
    1972:	a1 1d       	adc	r26, r1
    1974:	20 d0       	rcall	.+64     	; 0x19b6 <__ultoa_invert+0x84>
    1976:	09 f4       	brne	.+2      	; 0x197a <__ultoa_invert+0x48>
    1978:	68 94       	set
    197a:	3f 91       	pop	r19
    197c:	2a e0       	ldi	r18, 0x0A	; 10
    197e:	26 9f       	mul	r18, r22
    1980:	11 24       	eor	r1, r1
    1982:	30 19       	sub	r19, r0
    1984:	30 5d       	subi	r19, 0xD0	; 208
    1986:	31 93       	st	Z+, r19
    1988:	de f6       	brtc	.-74     	; 0x1940 <__ultoa_invert+0xe>
    198a:	cf 01       	movw	r24, r30
    198c:	08 95       	ret
    198e:	46 2f       	mov	r20, r22
    1990:	47 70       	andi	r20, 0x07	; 7
    1992:	40 5d       	subi	r20, 0xD0	; 208
    1994:	41 93       	st	Z+, r20
    1996:	b3 e0       	ldi	r27, 0x03	; 3
    1998:	0f d0       	rcall	.+30     	; 0x19b8 <__ultoa_invert+0x86>
    199a:	c9 f7       	brne	.-14     	; 0x198e <__ultoa_invert+0x5c>
    199c:	f6 cf       	rjmp	.-20     	; 0x198a <__ultoa_invert+0x58>
    199e:	46 2f       	mov	r20, r22
    19a0:	4f 70       	andi	r20, 0x0F	; 15
    19a2:	40 5d       	subi	r20, 0xD0	; 208
    19a4:	4a 33       	cpi	r20, 0x3A	; 58
    19a6:	18 f0       	brcs	.+6      	; 0x19ae <__ultoa_invert+0x7c>
    19a8:	49 5d       	subi	r20, 0xD9	; 217
    19aa:	31 fd       	sbrc	r19, 1
    19ac:	40 52       	subi	r20, 0x20	; 32
    19ae:	41 93       	st	Z+, r20
    19b0:	02 d0       	rcall	.+4      	; 0x19b6 <__ultoa_invert+0x84>
    19b2:	a9 f7       	brne	.-22     	; 0x199e <__ultoa_invert+0x6c>
    19b4:	ea cf       	rjmp	.-44     	; 0x198a <__ultoa_invert+0x58>
    19b6:	b4 e0       	ldi	r27, 0x04	; 4
    19b8:	a6 95       	lsr	r26
    19ba:	97 95       	ror	r25
    19bc:	87 95       	ror	r24
    19be:	77 95       	ror	r23
    19c0:	67 95       	ror	r22
    19c2:	ba 95       	dec	r27
    19c4:	c9 f7       	brne	.-14     	; 0x19b8 <__ultoa_invert+0x86>
    19c6:	00 97       	sbiw	r24, 0x00	; 0
    19c8:	61 05       	cpc	r22, r1
    19ca:	71 05       	cpc	r23, r1
    19cc:	08 95       	ret
    19ce:	9b 01       	movw	r18, r22
    19d0:	ac 01       	movw	r20, r24
    19d2:	0a 2e       	mov	r0, r26
    19d4:	06 94       	lsr	r0
    19d6:	57 95       	ror	r21
    19d8:	47 95       	ror	r20
    19da:	37 95       	ror	r19
    19dc:	27 95       	ror	r18
    19de:	ba 95       	dec	r27
    19e0:	c9 f7       	brne	.-14     	; 0x19d4 <__ultoa_invert+0xa2>
    19e2:	62 0f       	add	r22, r18
    19e4:	73 1f       	adc	r23, r19
    19e6:	84 1f       	adc	r24, r20
    19e8:	95 1f       	adc	r25, r21
    19ea:	a0 1d       	adc	r26, r0
    19ec:	08 95       	ret

000019ee <__mulsi3>:
    19ee:	db 01       	movw	r26, r22
    19f0:	8f 93       	push	r24
    19f2:	9f 93       	push	r25
    19f4:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <__muluhisi3>
    19f8:	bf 91       	pop	r27
    19fa:	af 91       	pop	r26
    19fc:	a2 9f       	mul	r26, r18
    19fe:	80 0d       	add	r24, r0
    1a00:	91 1d       	adc	r25, r1
    1a02:	a3 9f       	mul	r26, r19
    1a04:	90 0d       	add	r25, r0
    1a06:	b2 9f       	mul	r27, r18
    1a08:	90 0d       	add	r25, r0
    1a0a:	11 24       	eor	r1, r1
    1a0c:	08 95       	ret

00001a0e <__udivmodsi4>:
    1a0e:	a1 e2       	ldi	r26, 0x21	; 33
    1a10:	1a 2e       	mov	r1, r26
    1a12:	aa 1b       	sub	r26, r26
    1a14:	bb 1b       	sub	r27, r27
    1a16:	fd 01       	movw	r30, r26
    1a18:	0d c0       	rjmp	.+26     	; 0x1a34 <__udivmodsi4_ep>

00001a1a <__udivmodsi4_loop>:
    1a1a:	aa 1f       	adc	r26, r26
    1a1c:	bb 1f       	adc	r27, r27
    1a1e:	ee 1f       	adc	r30, r30
    1a20:	ff 1f       	adc	r31, r31
    1a22:	a2 17       	cp	r26, r18
    1a24:	b3 07       	cpc	r27, r19
    1a26:	e4 07       	cpc	r30, r20
    1a28:	f5 07       	cpc	r31, r21
    1a2a:	20 f0       	brcs	.+8      	; 0x1a34 <__udivmodsi4_ep>
    1a2c:	a2 1b       	sub	r26, r18
    1a2e:	b3 0b       	sbc	r27, r19
    1a30:	e4 0b       	sbc	r30, r20
    1a32:	f5 0b       	sbc	r31, r21

00001a34 <__udivmodsi4_ep>:
    1a34:	66 1f       	adc	r22, r22
    1a36:	77 1f       	adc	r23, r23
    1a38:	88 1f       	adc	r24, r24
    1a3a:	99 1f       	adc	r25, r25
    1a3c:	1a 94       	dec	r1
    1a3e:	69 f7       	brne	.-38     	; 0x1a1a <__udivmodsi4_loop>
    1a40:	60 95       	com	r22
    1a42:	70 95       	com	r23
    1a44:	80 95       	com	r24
    1a46:	90 95       	com	r25
    1a48:	9b 01       	movw	r18, r22
    1a4a:	ac 01       	movw	r20, r24
    1a4c:	bd 01       	movw	r22, r26
    1a4e:	cf 01       	movw	r24, r30
    1a50:	08 95       	ret

00001a52 <__muluhisi3>:
    1a52:	0e 94 6b 0d 	call	0x1ad6	; 0x1ad6 <__umulhisi3>
    1a56:	a5 9f       	mul	r26, r21
    1a58:	90 0d       	add	r25, r0
    1a5a:	b4 9f       	mul	r27, r20
    1a5c:	90 0d       	add	r25, r0
    1a5e:	a4 9f       	mul	r26, r20
    1a60:	80 0d       	add	r24, r0
    1a62:	91 1d       	adc	r25, r1
    1a64:	11 24       	eor	r1, r1
    1a66:	08 95       	ret

00001a68 <__prologue_saves__>:
    1a68:	2f 92       	push	r2
    1a6a:	3f 92       	push	r3
    1a6c:	4f 92       	push	r4
    1a6e:	5f 92       	push	r5
    1a70:	6f 92       	push	r6
    1a72:	7f 92       	push	r7
    1a74:	8f 92       	push	r8
    1a76:	9f 92       	push	r9
    1a78:	af 92       	push	r10
    1a7a:	bf 92       	push	r11
    1a7c:	cf 92       	push	r12
    1a7e:	df 92       	push	r13
    1a80:	ef 92       	push	r14
    1a82:	ff 92       	push	r15
    1a84:	0f 93       	push	r16
    1a86:	1f 93       	push	r17
    1a88:	cf 93       	push	r28
    1a8a:	df 93       	push	r29
    1a8c:	cd b7       	in	r28, 0x3d	; 61
    1a8e:	de b7       	in	r29, 0x3e	; 62
    1a90:	ca 1b       	sub	r28, r26
    1a92:	db 0b       	sbc	r29, r27
    1a94:	0f b6       	in	r0, 0x3f	; 63
    1a96:	f8 94       	cli
    1a98:	de bf       	out	0x3e, r29	; 62
    1a9a:	0f be       	out	0x3f, r0	; 63
    1a9c:	cd bf       	out	0x3d, r28	; 61
    1a9e:	09 94       	ijmp

00001aa0 <__epilogue_restores__>:
    1aa0:	2a 88       	ldd	r2, Y+18	; 0x12
    1aa2:	39 88       	ldd	r3, Y+17	; 0x11
    1aa4:	48 88       	ldd	r4, Y+16	; 0x10
    1aa6:	5f 84       	ldd	r5, Y+15	; 0x0f
    1aa8:	6e 84       	ldd	r6, Y+14	; 0x0e
    1aaa:	7d 84       	ldd	r7, Y+13	; 0x0d
    1aac:	8c 84       	ldd	r8, Y+12	; 0x0c
    1aae:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ab0:	aa 84       	ldd	r10, Y+10	; 0x0a
    1ab2:	b9 84       	ldd	r11, Y+9	; 0x09
    1ab4:	c8 84       	ldd	r12, Y+8	; 0x08
    1ab6:	df 80       	ldd	r13, Y+7	; 0x07
    1ab8:	ee 80       	ldd	r14, Y+6	; 0x06
    1aba:	fd 80       	ldd	r15, Y+5	; 0x05
    1abc:	0c 81       	ldd	r16, Y+4	; 0x04
    1abe:	1b 81       	ldd	r17, Y+3	; 0x03
    1ac0:	aa 81       	ldd	r26, Y+2	; 0x02
    1ac2:	b9 81       	ldd	r27, Y+1	; 0x01
    1ac4:	ce 0f       	add	r28, r30
    1ac6:	d1 1d       	adc	r29, r1
    1ac8:	0f b6       	in	r0, 0x3f	; 63
    1aca:	f8 94       	cli
    1acc:	de bf       	out	0x3e, r29	; 62
    1ace:	0f be       	out	0x3f, r0	; 63
    1ad0:	cd bf       	out	0x3d, r28	; 61
    1ad2:	ed 01       	movw	r28, r26
    1ad4:	08 95       	ret

00001ad6 <__umulhisi3>:
    1ad6:	a2 9f       	mul	r26, r18
    1ad8:	b0 01       	movw	r22, r0
    1ada:	b3 9f       	mul	r27, r19
    1adc:	c0 01       	movw	r24, r0
    1ade:	a3 9f       	mul	r26, r19
    1ae0:	70 0d       	add	r23, r0
    1ae2:	81 1d       	adc	r24, r1
    1ae4:	11 24       	eor	r1, r1
    1ae6:	91 1d       	adc	r25, r1
    1ae8:	b2 9f       	mul	r27, r18
    1aea:	70 0d       	add	r23, r0
    1aec:	81 1d       	adc	r24, r1
    1aee:	11 24       	eor	r1, r1
    1af0:	91 1d       	adc	r25, r1
    1af2:	08 95       	ret

00001af4 <_exit>:
    1af4:	f8 94       	cli

00001af6 <__stop_program>:
    1af6:	ff cf       	rjmp	.-2      	; 0x1af6 <__stop_program>
